{"version":3,"sources":["components/ProductsList/ProductsList.template.tsx","constants.ts","components/ProductsList/ProductsList.helpers.ts","components/ProductsList/ProductsList.constants.ts","components/ProductsList/ProductsList.initState.ts","components/Cart/Cart.constants.ts","components/ProductsList/ProductsList.component.tsx","components/ProductsList/index.ts","components/ProductsList/ProductsList.actions.ts","components/Cart/Cart.actions.ts","pages/Home.tsx","components/Cart/Cart.template.tsx","components/Cart/Cart.component.tsx","components/Cart/index.ts","components/OrderForm/OrderForm.template.tsx","components/OrderForm/OrderForm.constants.ts","components/OrderForm/OrderForm.component.tsx","components/OrderForm/OrderForm.helpers.ts","components/OrderForm/index.ts","components/OrderForm/OrderForm.actions.ts","pages/Cart.tsx","pages/Success.tsx","pages/Failed.tsx","components/TopNav/TopNav.template.tsx","components/TopNav/index.ts","components/TopNav/TopNav.component.tsx","components/Footer/Footer.template.tsx","components/Footer/index.ts","components/Footer/Footer.component.tsx","App.tsx","components/TopNav/TopNav.initState.ts","components/Cart/Cart.initState.ts","components/OrderForm/OrderForm.initState.ts","store/index.ts","components/TopNav/TopNav.reducer.ts","components/ProductsList/ProductsList.reducer.ts","components/Cart/Cart.reducer.ts","components/OrderForm/OrderForm.reducer.ts","serviceWorker.ts","index.tsx"],"names":["CategoriesListTemplate","props","categories","changeFilter","className","id","onClick","map","category","index","key","name","SingleProduct","product","addProduct","minusProduct","plusProduct","src","image","height","width","description","weight","weight_points","price","type","count","ProductListTemplate","loading","loaded","categoryFilter","products","role","MAIN_BACKEND","env","envPath","process","getProducts","a","axios","get","ProductListInitState","ProductListComponent","state","addProductToCart","bind","this","setInitState","then","response","tmpProducts","newProducts","newCategories","data","push","resetProduct","totalPrice","React","Component","connect","reducer","ProductListReducer","dispatch","payload","Constants","HomePage","CartTemplate","totalCount","removeProduct","CartComponent","CartReducer","OrderFormTemplate","user","deliveryData","paymentData","changeName","changeCell","changeAddress","changeRegion","changeComment","changePaymentMethod","createOrder","errors","onSubmit","htmlFor","placeholder","onChange","value","nameError","cell","cellError","style","region","address","addressError","rows","comment","checked","paymentType","OrderFormComponent","changeFormName","changeFormCell","changeFormAddress","changeFormRegion","changeFormComment","changeFormPaymentMethod","e","target","preventDefault","setError","resetErrors","isValid","length","compactProducts","postData","user_name","phone_number","compact_products","post","res","console","log","catch","err","error","sendOrderData","OrderFormReducer","resetForm","CartPage","SuccessPage","href","FailedPage","TopNavTemplate","cartCount","to","FooterTemplate","alt","App","path","exact","component","TopNavInitState","CartInitState","errorsInitState","OrderFormState","rootReducer","combineReducers","TopNavReducer","action","targetProduct","newCount","newProduct","newTotalCount","newTotalPrice","exist","result","onlyDigits","match","join","slice","newErrors","errorType","store","createStore","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fbac5c2d.chunk.js","sourcesContent":["import React from 'react'\nimport { ICategory, IProductListTemplate, IProduct } from './ProductsList.interface'\nimport './ProductsList.css'\n\n\ninterface ICategoryTemplate {\n    categories:ICategory[],\n    changeFilter:(payload:number) => void,\n}\n\ninterface ISingleProduct {\n    product: IProduct,\n    plusProduct:(payload:IProduct) => void,\n    minusProduct:(payload:IProduct) => void,\n    addProduct:(payload:IProduct) => void,\n\n}\n\nconst CategoriesListTemplate = (props:ICategoryTemplate) => {\n    const { categories, changeFilter } = props\n    return (\n        <ul className=\"list-group mb-5 categories-list\">\n        <li\n            id=\"category-all\"\n            className=\"list-group-item category\"\n            onClick={() => changeFilter(0)}\n        >Меню</li>\n        {categories.map( (category, index) => {\n            return (\n                <li\n                    key={`category-${index}`}\n                    className=\"list-group-item category\"\n                    onClick={() => changeFilter(category.id)}\n                >{category.name}</li>\n            )\n        } )}\n        </ul>\n    )\n}\n\nconst SingleProduct = (props:ISingleProduct) => {\n    const { product, addProduct, minusProduct, plusProduct } = props\n    return (\n        <div className=\"col-md-4 product-item\">\n            <div className=\"card mb-4 shadow-sm\">\n            {/* <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#55595c\"></rect><text x=\"50%\" y=\"50%\" fill=\"#eceeef\" dy=\".3em\">Thumbnail</text></svg> */}\n            <img src={product.image} height=\"225\" width=\"100%\"/>\n            <div className=\"card-body\">\n                <h3 className=\"product-item-title\">{product.name}</h3>\n                <p className=\"card-text product-item-desc\">{product.description}</p>\n                <h5 className=\"product-item-props\">\n                    <small className=\"text-muted mr-2\">{product.weight} {product.weight_points}</small>\n                    <span className=\"product-item-price\">{product.price} грн</span>\n                </h5>\n                <hr/>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-outline-custom\"\n                        onClick={() => addProduct(product)}\n                    >Додати</button>\n                    <div className=\"product-item-counter\">\n                        <span className=\"with-border minus\" onClick={() => {minusProduct(product)}}>-</span>\n                        <span className=\"with-border counter\">{product.count}</span>\n                        <span className=\"with-border plus\" onClick={() => {plusProduct(product)}}>+</span>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport const ProductListTemplate = (props:IProductListTemplate) => {\n    const { categories, loading, loaded,\n        plusProduct, minusProduct, addProduct, changeFilter, categoryFilter } = props\n\n    if (!loading && loaded)\n        return (\n            <div className=\"ProductList\">\n\n                <CategoriesListTemplate categories={categories} changeFilter={changeFilter}/>\n\n                    {categories.map( (category) => {\n                        if (category.id === categoryFilter || !categoryFilter)\n                        return (\n                            <div key={`category-${category.id}`} className=\"mb-3\">\n                                <h1 className=\"category-name\">{category.name}</h1>\n                                <div className=\"row\">\n                                {category.products.map( product => {\n                                    return (\n                                        <SingleProduct\n                                            key={`product-${product.id}`}\n                                            product={product}\n                                            plusProduct={plusProduct}\n                                            minusProduct={minusProduct}\n                                            addProduct={addProduct}\n                                        />\n                                    )\n                                })}\n                                </div>\n                            </div>\n                        )\n                    })}                  \n\n                <CategoriesListTemplate categories={categories} changeFilter={changeFilter}/>\n\n            </div>\n        )\n    else if (loading && loaded)\n        return (\n            <h1>ERROR</h1>\n        )\n    else if (loading && !loaded)\n        return (\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n    else\n        return (\n            <h1></h1>\n        )\n}","const envPath = (env:string):string => {\n    switch (env) {\n        case \"development\":\n            return \"http://localhost:8000\"\n\n        case \"test\":\n            return \"\"\n\n        case \"production\":\n            return \"\"\n    \n        default:\n            return \"\"\n    }\n}\n\nexport const MAIN_BACKEND = envPath(process.env.NODE_ENV)\n","import axios from 'axios'\nimport { MAIN_BACKEND } from '../../constants'\n\n\nexport const getProducts = async () => {\n    return await axios.get(`${MAIN_BACKEND}/product/`)\n}\n\n\nexport const getAll = () => {\n    return [{\n        id: 1,\n        name: \"category1\",\n        products: [{\n            id: 1,\n            name: \"Product1\",\n            description: \"desc, longer, description, should, be here, some words, lalka, pipka\",\n            price: 10,\n            alailable: true,\n            weight: 200,\n            weight_points: \"г\",\n            category: 1,\n            image: '',\n        }]\n    },{\n        id: 2,\n        name: \"category2\",\n        products: [{\n            id: 2,\n            name: \"Product2\",\n            description: \"desc, longer, description, should\",\n            price: 32,\n            alailable: true,\n            weight_points: \"мл\",\n            weight: 300,\n            category: 2,\n            image: '',\n        }]\n    }]\n}","export default {\n    SET_INIT_STATE: \"SET_INIT_STATE_PRODUCCT_LIST\",\n    PLUS_PRODUCT: \"PLUS_PRODUCT_PRODUCCT_LIST\",\n    MINUS_PRODUCT: \"MINUS_PRODUCT_PRODUCCT_LIST\",\n    RESET_PRODUCT: \"RESET_PRODUCT_PRODUCCT_LIST\",\n    CHANGE_FILTER: \"CHANGE_FILTER_PRODUCCT_LIST\",\n}","import { IProductList } from \"./ProductsList.interface\"\n\n\nexport const ProductListInitState:IProductList = {\n    products: [],\n    categories: [],\n    loaded: false,\n    loading: false,\n    categoryFilter: 0,\n}","export default {\n    ADD_PRODUCT: \"ADD_PRODUCT_TO_CART\",\n    REMOVE_PRODUCT: \"REMOVE_PRODUCT_FROM_CART\",\n    PLUS_PRODUCT: \"PLUS_PRODUCT_TO_CART\",\n    MINUS_PRODUCT: \"MINUS_PRODUCT_TO_CART\",\n    CLEAN_CART: \"CLEAN_CART\",\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { ProductListTemplate } from './ProductsList.template'\nimport { IProductList, IProduct, IProductListExt, ICategory } from './ProductsList.interface'\nimport { getAll, getProducts } from './ProductsList.helpers'\nimport { setInitState } from './ProductsList.actions'\nimport { ProductListInitState } from \"./ProductsList.initState\"\nimport { plusProduct, minusProduct, resetProduct, changeFilter } from './ProductsList.actions'\nimport { addProduct } from '../Cart/Cart.actions'\nimport { ICartProduct } from '../Cart/Cart.interface'\n\n\nconst mapStateToProps = (reducer:any):IProductList => {\n    const { ProductListReducer } = reducer\n    return ProductListReducer\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setInitState:(payload:IProductList) => dispatch(setInitState(payload)),\n        plusProduct:(payload:IProduct) => dispatch(plusProduct(payload)),\n        minusProduct:(payload:IProduct) => dispatch(minusProduct(payload)),\n        resetProduct:(payload:IProduct) => dispatch(resetProduct(payload)),\n        addProduct:(payload:ICartProduct) => {dispatch(addProduct(payload))},\n        changeFilter:(payload:number) => {dispatch(changeFilter(payload))},\n    }\n}\n\n\nclass ProductListComponent extends React.Component<IProductListExt, IProductList> {\n\n    constructor(props: IProductListExt, state: IProductList) {\n        super(props, state)\n\n        this.addProductToCart = this.addProductToCart.bind(this)\n    }\n\n    componentDidMount() {\n        const { setInitState, categoryFilter } = this.props\n        setInitState({\n            ...ProductListInitState,\n            loading: true,\n        })\n\n        const response = getProducts()\n\n        response.then((response) => {\n            let newProducts: IProduct[] = []\n            let tmpProducts: IProduct[]\n            let newCategories: ICategory[] = []\n    \n            for (let category of response.data) {\n                tmpProducts = []\n                for (let product of category.products) {\n                    tmpProducts.push({\n                        ...product,\n                        count: 1\n                    })\n                }\n    \n                newCategories.push({\n                    id: category.id,\n                    name: category.name,\n                    products: tmpProducts,\n                })\n                newProducts = [...newProducts, ...tmpProducts]\n            }\n\n            setInitState({\n                categories: newCategories,\n                products: newProducts,\n                loading: false,\n                loaded: true,\n                categoryFilter,\n            })\n        })\n\n    }\n\n    addProductToCart(product:IProduct) {\n        const { addProduct, resetProduct } = this.props\n        addProduct({\n            id:product.id,\n            name:product.name,\n            price:product.price,\n            count:product.count,\n            totalPrice:product.price * product.count\n        })\n        resetProduct(product)\n    }\n\n    render() {\n        const { products, categories, loaded, loading, plusProduct,\n            minusProduct, categoryFilter, changeFilter } = this.props\n        return (\n            <ProductListTemplate\n                products={products}\n                categories={categories}\n                loaded={loaded}\n                loading={loading}\n                plusProduct={plusProduct}\n                minusProduct={minusProduct}\n                categoryFilter={categoryFilter}\n                addProduct={product => this.addProductToCart(product)}\n                changeFilter={changeFilter}\n            />\n        )\n    }\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListComponent)","import ProductsListComponent from \"./ProductsList.component\"\n\n\nexport default {\n    Component: ProductsListComponent,\n}","import Constants from './ProductsList.constants'\nimport { IProductList, IProduct } from './ProductsList.interface'\n\n\nexport const setInitState = (payload:IProductList) => {\n    return {type: Constants.SET_INIT_STATE, payload}\n}\n\nexport const plusProduct = (product:IProduct) => {\n    return {type: Constants.PLUS_PRODUCT, payload:product}\n}\n\nexport const minusProduct = (product:IProduct) => {\n    return {type: Constants.MINUS_PRODUCT, payload:product}\n}\n\nexport const resetProduct = (product:IProduct) => {\n    return {type: Constants.RESET_PRODUCT, payload:product}\n}\n\nexport const changeFilter = (categoryId:number) => {\n    return {type: Constants.CHANGE_FILTER, payload:categoryId}\n}","import Constants from './Cart.constants'\nimport { ICartProduct } from './Cart.interface'\n\n\nexport const addProduct = (product:ICartProduct) => {\n    return {type:Constants.ADD_PRODUCT, payload:product}\n}\n\nexport const removeProduct = (product:ICartProduct) => {\n    return {type:Constants.REMOVE_PRODUCT, payload:product}\n}\n\nexport const plusProduct = (product:ICartProduct) => {\n    return {type:Constants.PLUS_PRODUCT, payload:product}\n}\n\nexport const minusProduct = (product:ICartProduct) => {\n    return {type:Constants.MINUS_PRODUCT, payload:product}\n}\n\nexport const cleanCart = () => {\n    return {type:Constants.CLEAN_CART, payload:{}}\n}","import React from 'react'\nimport ProductList from '../components/ProductsList'\n\nconst HomePage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"jumbotron p-4 p-md-5 text-white rounded bg-dark\">\n                <div className=\"col-md-12 px-0\">\n                <h3 className=\"display-6 font-italic text-left\">Відтепер щодня з 12:00 до 20:00 ви можете замовити свої улюблені страви з доставкою від Maestro!</h3>\n                <p className=\"lead my-3 text-left\">Залишаючись вдома ви рятуєте життя , а ми хочемо зробити ваш карантин смачним і корисним!</p>\n                <p className=\"lead my-3 text-left\">Умови доставки:<br/>\n                    ➖Самовивіз -10%<br/>\n                    ➖Доставка 50гр (в межах Львова)<br/>\n                    ➖За межі Львова - вартість за тарифом таксі<br/>\n                    ➖При замовленні від 500 грн - доставка БЕЗКОШТОВНА </p>\n                </div>\n            </div>\n\n            <ProductList.Component />\n\n        </div>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { ICartStateExt } from './Cart.interface'\nimport './Cart.css'\n\n\nexport const CartTemplate = (props:ICartStateExt) => {\n    const { products, totalCount, totalPrice, plusProduct, minusProduct, removeProduct } = props\n    return (\n        <div className=\"CartTemplate\">\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n              <span>Ваше замовлення</span>\n              <span className=\"badge badge-custom badge-pill\">{totalCount}</span>\n            </h4>\n            <ul className=\"list-group mb-3\">\n              {products.map( (product, index ) => {\n                return (\n                  <li key={`cart-item-${index}`} className=\"list-group-item cart-item\">\n                    <div className=\"d-flex justify-content-between lh-condensed mb-2\">\n                      <h6 className=\"my-0\">{product.name}</h6>\n                      <span>{product.price}грн X {product.count} = {product.totalPrice}грн</span>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div className=\"cart-item-counter\">\n                          <span className=\"with-border minus\" onClick={() => {minusProduct(product)}}>-</span>\n                          <span className=\"with-border counter\">{product.count}</span>\n                          <span className=\"with-border plus\" onClick={() => {plusProduct(product)}}>+</span>\n                      </div>\n                      <div>\n                        <span className=\"with-border remove\" onClick={() => removeProduct(product)}>X</span>\n                      </div>\n                    </div>\n                  </li>  \n                )\n              })}\n              <li className=\"list-group-item d-flex justify-content-between\">\n                <span>Всього</span>\n                <strong>{totalPrice}грн</strong>\n              </li>\n            </ul>\n        </div>\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { ICartState, ICartStateExt, ICartProduct } from './Cart.interface'\nimport { CartTemplate } from './Cart.template'\nimport { plusProduct, minusProduct, removeProduct } from '../Cart/Cart.actions'\n\n\nconst mapStateToProps = (reducer:any):ICartState => {\n    const { CartReducer } = reducer\n    return CartReducer\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        plusProduct:(product:ICartProduct) => dispatch(plusProduct(product)),\n        minusProduct:(product:ICartProduct) => dispatch(minusProduct(product)),\n        removeProduct:(product:ICartProduct) => dispatch(removeProduct(product)),\n    }\n}\n\nclass CartComponent extends React.Component<ICartStateExt, ICartState> {\n    render() {\n        return (\n            <CartTemplate {...this.props}/>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartComponent)","import CartComponent from './Cart.component'\n\n\nexport default {\n    Component: CartComponent,\n}","import React from 'react'\nimport { IOrderFormTemplate } from './OrderForm.interface'\nimport './OrderForm.css'\n\n\nexport const OrderFormTemplate = (props:IOrderFormTemplate) => {\n    const {\n        user,\n        deliveryData,\n        paymentData,\n        changeName,\n        changeCell,\n        changeAddress,\n        changeRegion,\n        changeComment,\n        changePaymentMethod,\n        createOrder,\n        errors,\n    } = props\n    return (\n        <form className=\"needs-validation OrderFormTemplate\" onSubmit={createOrder}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"address\">Ім'я</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"\"\n                    onChange={changeName}\n                    value={user.name}\n                />\n                <div className={`invalid-feedback ${errors.nameError ? \"d-block\" : \"\"}`}>\n                Вкажіть ваше ім'я.\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"cell\">Номер телефону</label>\n                <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">+380</span>\n                </div>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"cell\"\n                    placeholder=\"XXXXXXXXX\"\n                    onChange={changeCell}\n                    value={user.cell}\n                    />\n                <div className={`invalid-feedback ${errors.cellError ? \"d-block\" : \"\"}`} style={{width: \"100%\"}}>\n                    Номер телефону є обов'язковим.\n                </div>\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"city\">Регіон</label>\n                <select\n                    onChange={changeRegion}\n                    value={deliveryData.region}\n                    className=\"custom-select d-block w-100\"\n                    id=\"city\"\n                >\n                    <option value=\"lviv\">Львів</option>\n                    <option value=\"lviv region\">Околиці Львова</option>\n                    <option value=\"by-client\">Самовивіз (знижка 10%)</option>\n                </select>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"address\">Адреса</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"address\"\n                    placeholder=\"вул. Шевченка 1, кв 1\"\n                    onChange={changeAddress}\n                    value={deliveryData.address}\n                />\n                <div className={`invalid-feedback ${errors.addressError ? \"d-block\" : \"\"}`}>\n                Введіть адресу доставки.\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"comment\">Коментарій</label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"comment\"\n                    rows={5}\n                    placeholder=\"додаткові пропозиції...\"\n                    onChange={changeComment}\n                    value={deliveryData.comment}\n                ></textarea>\n            </div>\n\n            <hr className=\"mb-4\" />\n\n            <h4 className=\"mb-3\">Тип оплати</h4>\n            <div className=\"d-block my-3\">\n                <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"cash\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        checked={paymentData.paymentType == '1'}\n                        value={'1'}\n                        onChange={changePaymentMethod}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"cash\">Готівка</label>\n                </div>\n                <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"debit\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        checked={paymentData.paymentType == '2'}\n                        value={'2'}\n                        onChange={changePaymentMethod}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debit\">Карткою при отриманні</label>\n                </div>\n                {/* <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"debit\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        disabled\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debit\">Карткою онлайн (не досту)</label>\n                </div> */}\n            </div>\n\n            <hr className=\"mb-4\" />\n            <button className=\"btn btn-custom btn-lg btn-block\" type=\"submit\">Створити замовлення</button>\n        </form>\n    )\n}","export default {\n    CHANGE_NAME: \"CHANGE_NAME\",\n    CHANGE_CELL: \"CHANGE_CELL\",\n    CHANGE_ADDRESS: \"CHANGE_ADDRESS\",\n    CHANGE_REGION: \"CHANGE_REGION\",\n    CHANGE_COMMENT: \"CHANGE_COMMENT\",\n    CHANGE_PAYMENT_METHOD: \"CHANGE_PAYMENT_METHOD\",\n    RESET_FORM: \"RESET_FORM\",\n    RESET_ERRORS: \"RESET_ERRORS\",\n    SET_ERROR: \"SET_ERROR\",\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IOrderForm, IOrderFormExt } from './OrderForm.interface'\nimport { OrderFormTemplate } from './OrderForm.template'\nimport {\n    changeName,\n    changeCell,\n    changeAddress,\n    changeRegion,\n    changeComment,\n    changePaymentMethod,\n    resetForm,\n    resetErrors,\n    setError,\n} from './OrderForm.actions'\nimport { sendOrderData } from './OrderForm.helpers'\n\n\nconst mapStateToProps = (reducer:any):IOrderForm => {\n    const { OrderFormReducer, CartReducer } = reducer\n    return {\n        ...OrderFormReducer,\n        products:CartReducer.products,\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeName:(payload:string) => dispatch(changeName(payload)),\n        changeCell:(payload:string) => dispatch(changeCell(payload)),\n        changeAddress:(payload:string) => dispatch(changeAddress(payload)),\n        changeRegion:(payload:string) => dispatch(changeRegion(payload)),\n        changeComment:(payload:string) => dispatch(changeComment(payload)),\n        changePaymentMethod:(payload:string) => dispatch(changePaymentMethod(payload)),\n        resetForm:() => dispatch(resetForm()),\n        resetErrors:() => dispatch(resetErrors()),\n        setError:(name:string) => dispatch(setError(name)),\n    }\n}\n\n\nclass OrderFormComponent extends React.Component<IOrderFormExt, IOrderForm> {\n\n    constructor(props:IOrderFormExt, state:IOrderForm) {\n        super(props, state)\n\n        this.changeFormName = this.changeFormName.bind(this)\n        this.changeFormCell = this.changeFormCell.bind(this)\n        this.changeFormAddress = this.changeFormAddress.bind(this)\n        this.changeFormRegion = this.changeFormRegion.bind(this)\n        this.changeFormComment = this.changeFormComment.bind(this)\n        this.changeFormPaymentMethod = this.changeFormPaymentMethod.bind(this)\n        this.createOrder = this.createOrder.bind(this)\n    }\n\n    changeFormName(e:any) {\n        const { changeName } = this.props\n        changeName(e.target.value)\n    }\n\n    changeFormCell(e:any) {\n        const { changeCell } = this.props\n        changeCell(e.target.value)\n    }\n\n    changeFormAddress(e:any) {\n        const { changeAddress } = this.props\n        changeAddress(e.target.value)\n    }\n\n    changeFormRegion(e:any) {\n        const { changeRegion } = this.props\n        changeRegion(e.target.value)\n    }\n\n    changeFormComment(e:any) {\n        const { changeComment } = this.props\n        changeComment(e.target.value)\n    }\n\n    changeFormPaymentMethod(e:any) {\n        const { changePaymentMethod } = this.props\n        changePaymentMethod(e.target.value)\n    }\n\n    createOrder(e:any) {\n        e.preventDefault()\n        const { setError, resetErrors } = this.props\n        const { user, deliveryData, paymentData, products } = this.props\n        resetErrors()\n        let isValid = true\n\n        if (user.name.length === 0){\n            setError(\"name\")\n            isValid = false\n        }\n        if (user.cell.length < 9){\n            setError(\"cell\")\n            isValid = false\n        }\n        if (deliveryData.address.length < 5){\n            setError(\"address\")\n            isValid = false\n        }\n        if (isValid) {\n            sendOrderData({user, deliveryData, paymentData, products})\n        }\n    }\n\n    render() {\n        const {\n            user,\n            deliveryData,\n            paymentData,\n            errors,\n        } = this.props\n        return (\n            <OrderFormTemplate\n                user={user}\n                deliveryData={deliveryData}\n                paymentData={paymentData}\n                changeName={this.changeFormName}\n                changeCell={this.changeFormCell}\n                changeAddress={this.changeFormAddress}\n                changeRegion={this.changeFormRegion}\n                changeComment={this.changeFormComment}\n                changePaymentMethod={this.changeFormPaymentMethod}\n                createOrder={this.createOrder}\n                errors={errors}\n            />\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderFormComponent)","import axios from 'axios'\nimport { MAIN_BACKEND } from '../../constants'\n\n\ninterface CompactProduct {\n    id:number,\n    count:number,\n}\n\nexport const sendOrderData = (data:any) => {\n    try {\n        const { user, deliveryData, paymentData, products } = data\n        let compactProducts:CompactProduct[] = []\n\n        if (products.length === 0)\n            return false\n\n        for (let product of products) {\n            compactProducts.push({\n                id:product.id,\n                count:product.count,\n            })\n        }\n        const postData = {\n            user_name: user.name,\n            phone_number: user.cell,\n            address: deliveryData.address,\n            region: deliveryData.region,\n            comment: deliveryData.comment,\n            compact_products: compactProducts\n        }\n\n        axios.post(`${MAIN_BACKEND}/order/`, postData).then((res) => {\n            // window.location.href = \"/success\"\n            console.log(res)\n        }).catch((err) => {\n            // window.location.href = \"/failed\"\n            console.log(err)\n        })\n\n        return true\n    } catch (error) {\n        return false\n    }\n} ","import OrderFormComponent from \"./OrderForm.component\"\n\n\nexport default {\n    Component:OrderFormComponent\n}","import Constants from './OrderForm.constants'\n\n\nexport const changeName = (payload:string) => {\n    return {type:Constants.CHANGE_NAME, payload}\n}\n\nexport const changeCell = (payload:string) => {\n    return {type:Constants.CHANGE_CELL, payload}\n}\n\nexport const changeAddress = (payload:string) => {\n    return {type:Constants.CHANGE_ADDRESS, payload}\n}\n\nexport const changeRegion = (payload:string) => {\n    return {type:Constants.CHANGE_REGION, payload}\n}\n\nexport const changeComment = (payload:string) => {\n    return {type:Constants.CHANGE_COMMENT, payload}\n}\n\nexport const changePaymentMethod = (payload:string) => {\n    return {type:Constants.CHANGE_PAYMENT_METHOD, payload}\n}\n\nexport const resetForm = () => {\n    return {type:Constants.RESET_FORM, payload:{}}\n}\n\nexport const resetErrors = () => {\n    return {type:Constants.RESET_ERRORS, payload:{}}\n}\n\nexport const setError = (name:string) => {\n    return {type:Constants.SET_ERROR, payload:name}\n}","import React from 'react'\nimport Cart from '../components/Cart'\nimport OrderForm from '../components/OrderForm'\n\n\nconst CartPage = () => {\n    return (\n        <div className=\"container cart-container\">\n            <div className=\"row\">\n                <div className=\"col-md-4 order-md-2 mb-4\">\n                    <Cart.Component />\n                </div>\n\n                <div className=\"col-md-8 order-md-1\">\n                    <h4 className=\"mb-3\">Деталі замовлення</h4>\n                    <OrderForm.Component />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CartPage","import React from 'react'\n\n\nconst SuccessPage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n            <div className=\"col-md-5 p-lg-5 mx-auto my-5\">\n                <h1 className=\"display-4 font-weight-normal\">Ваше замовлення прийняте</h1>\n                <p className=\"lead font-weight-normal\">Незабаром вам зателефонують</p>\n                <a className=\"btn btn-outline-secondary\" href=\"/\">На головну</a>\n            </div>\n            <div className=\"product-device shadow-sm d-none d-md-block\"></div>\n            <div className=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SuccessPage","import React from 'react'\n\n\nconst FailedPage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n            <div className=\"col-md-5 p-lg-5 mx-auto my-5\">\n                <h1 className=\"display-4 font-weight-normal\">Сталась помилка(</h1>\n                <p className=\"lead font-weight-normal\">З технічних причин замовлення не може бути прийняте</p>\n                <p className=\"lead font-weight-normal\">Але ви можете зробити замовлення по телефону</p>\n                <p className=\"lead font-weight-normal\">+38 098 982 35 82</p>\n                <a className=\"btn btn-outline-secondary\" href=\"/\">На головну</a>\n            </div>\n            <div className=\"product-device shadow-sm d-none d-md-block\"></div>\n            <div className=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default FailedPage","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ITopNavInterface } from './TopNav.interface'\nimport './TopNav.css'\n\n\nconst TopNavTemplate = (props:ITopNavInterface) => {\n    const { cartCount } = props\n    return (\n        <div className=\"d-flex flex-column flex-md-row align-items-center fixed-top p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\">\n                <img className=\"topnav-logo\" src=\"/static/images/logo.jpg\"/>\n                <span className=\"d-none d-md-block\">+38 098 982 35 82</span>\n            </h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n            <Link className=\"p-2 text-dark\" to=\"/\">Головна</Link>\n            </nav>\n            <Link className=\"btn btn-outline-custom\" to=\"/cart\">\n                <span className=\"mr-1\">Замовлення</span>\n                <span className=\"badge badge-light\">{cartCount}</span>\n            </Link>\n        </div>\n    )\n}\n\nexport default TopNavTemplate","import TopNavComponent from './TopNav.component'\n\nexport default {\n    Component: TopNavComponent\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport TopNavTemplate from './TopNav.template'\nimport { ITopNavInterface } from './TopNav.interface'\n\n\nconst mapStateToProps = (reducer:any):ITopNavInterface => {\n    const { CartReducer } = reducer\n    return {\n        cartCount:CartReducer.totalCount,\n    }\n}\n\nconst TopNavComponent = (props:ITopNavInterface) => {\n    return (<TopNavTemplate {...props}/>)\n}\n\nexport default connect(mapStateToProps)(TopNavComponent)","import React from 'react'\nimport './Footer.css'\n\n\nexport const FooterTemplate = () => {\n    return (\n        <footer className=\"container pt-4 my-md-5 pt-md-5 border-top Footer\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md\">\n                    <img className=\"mb-2\" src=\"/docs/4.4/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"24\" height=\"24\" />\n                    <small className=\"d-block mb-3 text-muted\">© 2015-2020</small>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Умови доставки:</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>Самовивіз -10%</li>\n                    <li>Доставка 50гр (в межах Львова)</li>\n                    <li>За межі Львова - вартість за тарифом таксі</li>\n                    <li>При замовленні від 500 грн - доставка БЕЗКОШТОВНА</li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Час доставки</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>59 хв - 2 год ( залежно яке замовлення і куди везти)</li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Як оплатити?</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>Готівкою кур’єру</li>\n                    <li>Карткою через термінал у кур’єра</li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    )\n}","import { FooterComponent } from './Footer.component'\n\n\nexport default {\n    Compenent: FooterComponent\n}","import React from 'react'\nimport { FooterTemplate } from './Footer.template'\n\n\nexport const FooterComponent = () => {\n    return (<FooterTemplate />)\n}","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\nimport HomePage from './pages/Home'\nimport CartPage from './pages/Cart'\nimport SuccessPage from './pages/Success'\nimport FailedPage from './pages/Failed'\nimport TopNav from './components/TopNav'\nimport Footer from './components/Footer'\nimport logo from './logo.svg'\nimport './App.css'\n\nconst App =() => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <TopNav.Component />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/success\" component={SuccessPage} />\n          <Route path=\"/failed\" component={FailedPage} />\n        </Switch>\n        <Footer.Compenent />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ITopNavInterface } from \"./TopNav.interface\"\n\n\nexport const TopNavInitState:ITopNavInterface = {\n    cartCount: 0,\n}","import { ICartState } from \"./Cart.interface\"\n\nexport const CartInitState:ICartState = {\n    products: [],\n    totalPrice:0,\n    totalCount:0,\n}","import { IUser, IDeliveryData, IPaymentData, IOrderForm, IErrors } from \"./OrderForm.interface\"\nimport { ICartProduct } from \"../Cart/Cart.interface\"\n\n\nexport const userInitState:IUser = {\n    name: \"\",\n    cell: \"\",\n}\n\nexport const deliveryDataInitState:IDeliveryData = {\n    region: \"lviv\",\n    address: \"\",\n    comment: \"\",\n}\n\nexport const productsInitState:ICartProduct[] = []\n\nexport const paymentDataInitState:IPaymentData = {\n    paymentType: '1',\n}\n\nexport const errorsInitState:IErrors = {\n    nameError: false,\n    cellError: false,\n    addressError: false,\n}\n\nexport const OrderFormState:IOrderForm = {\n    user:userInitState,\n    deliveryData:deliveryDataInitState,\n    products:productsInitState,\n    paymentData:paymentDataInitState,\n    errors:errorsInitState,\n}","import { createStore, combineReducers } from \"redux\"\nimport { TopNavReducer } from '../components/TopNav/TopNav.reducer'\nimport { ProductListReducer } from '../components/ProductsList/ProductsList.reducer'\nimport { CartReducer } from \"../components/Cart/Cart.reducer\"\nimport { OrderFormReducer } from \"../components/OrderForm/OrderForm.reducer\"\n\n\nconst rootReducer = combineReducers({\n    TopNavReducer,\n    ProductListReducer,\n    CartReducer,\n    OrderFormReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react'\nimport { TopNavInitState } from './TopNav.initState'\n\n\nexport const TopNavReducer = (state = TopNavInitState, action:any) => {\n    return state\n}","import { IProductList, IProduct, ICategory } from \"./ProductsList.interface\"\nimport { ProductListInitState } from \"./ProductsList.initState\"\nimport Constants from './ProductsList.constants'\n\n\nexport const ProductListReducer = (state:IProductList = ProductListInitState, action:any) => {\n\n    if (action.type === Constants.SET_INIT_STATE) {\n        return action.payload\n    }\n\n    if (action.type === Constants.PLUS_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        newProducts.push({\n                            ...product,\n                            count: product.count + 1\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.MINUS_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        const newCount = product.count > 1 ? product.count - 1 : 1\n                        newProducts.push({\n                            ...product,\n                            count: newCount\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.RESET_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        newProducts.push({\n                            ...product,\n                            count: 1\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.CHANGE_FILTER) {\n        return {\n            ...state,\n            categoryFilter:action.payload,\n        }\n    }\n\n    return state\n}","import { ICartState, ICartProduct } from \"./Cart.interface\"\nimport { CartInitState } from \"./Cart.initState\"\nimport Constants from './Cart.constants'\n\n\nexport const CartReducer = (state:ICartState = CartInitState, action:any):ICartState => {\n\n    if (action.type === Constants.ADD_PRODUCT) {\n        const newProduct:ICartProduct = action.payload\n        let newProducts:ICartProduct[] = []\n        let newTotalCount = 0\n        let newTotalPrice = 0\n        let exist = false\n        for (let product of state.products) {\n            if (product.id === newProduct.id) {\n                newProducts.push(newProduct)\n                newTotalCount += newProduct.count\n                newTotalPrice += newProduct.totalPrice\n                exist = true\n            } else {\n                newProducts.push(product)\n                newTotalCount += product.count\n                newTotalPrice += product.totalPrice\n            }\n        }\n        if (!exist) {\n            newProducts.push(newProduct)\n            newTotalCount += newProduct.count\n            newTotalPrice += newProduct.totalPrice\n        }\n        const result = {\n            products: newProducts,\n            totalCount: newTotalCount,\n            totalPrice: newTotalPrice,\n        }\n        return result\n    }\n\n    if (action.type === Constants.REMOVE_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        for (let product of state.products) {\n            if (product.id !== targetProduct.id) {\n                newProducts.push(product)\n            }\n        }\n        return {\n            products:newProducts,\n            totalCount: state.totalCount - targetProduct.count,\n            totalPrice: state.totalPrice - targetProduct.totalPrice,\n        }\n    }\n\n    if (action.type === Constants.PLUS_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        for (let product of state.products) {\n            if (product.id === targetProduct.id) {\n                newProducts.push({\n                    ...product,\n                    count: product.count + 1,\n                    totalPrice: product.totalPrice + product.price,\n                })\n            } else {\n                newProducts.push(product)\n            }\n        }\n        return {\n            products: newProducts,\n            totalCount: state.totalCount + 1,\n            totalPrice: state.totalPrice + targetProduct.price\n        }\n    }\n\n    if (action.type === Constants.MINUS_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        let newTotalCount = 0\n        let newTotalPrice = 0\n        for (let product of state.products) {\n            if (product.id === targetProduct.id) {\n                const newCount = product.count - 1\n                if (newCount >= 1) {\n                    newProducts.push({\n                        ...product,\n                        count: newCount,\n                        totalPrice: product.price * newCount\n                    })    \n                    newTotalCount += newCount\n                    newTotalPrice += product.price * newCount\n                }\n                    \n            } else {\n                newProducts.push(product)\n                newTotalCount += product.count\n                newTotalPrice += product.totalPrice\n            }\n        }\n        return {\n            products: newProducts,\n            totalCount: newTotalCount,\n            totalPrice: newTotalPrice,\n        }\n    }\n\n    if (action.type === Constants.CLEAN_CART) {\n        return {\n            products:[],\n            totalCount: 0,\n            totalPrice: 0,\n        }\n    }\n\n    return state\n}","import { IOrderForm } from \"./OrderForm.interface\"\nimport { OrderFormState, errorsInitState } from \"./OrderForm.initState\"\nimport Constants from './OrderForm.constants'\n\n\nexport const OrderFormReducer = (state:IOrderForm = OrderFormState, action:any) => {\n\n    if (action.type === Constants.CHANGE_NAME) {\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                name: action.payload,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_CELL) {\n        let onlyDigits = action.payload.match(/\\d/g)\n        let cell:string = onlyDigits ? onlyDigits.join(\"\") : \"\"\n        if (cell.length > 9)\n            cell = cell.slice(0, 9)\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                cell,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_REGION) {\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                region: action.payload,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_ADDRESS) {\n        let address = action.payload\n        if (address.length > 32)\n            address = address.slice(0, 32)\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                address,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_COMMENT) {\n        let comment = action.payload\n        if (comment.length > 256)\n            comment = comment.slice(0, 256)\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                comment,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_PAYMENT_METHOD) {\n        let paymentType = action.payload\n        return {\n            ...state,\n            paymentData: {\n                ...state.paymentData,\n                paymentType,\n            }\n        }\n    }\n\n    if (action.type === Constants.RESET_FORM) {\n        return {\n            ...OrderFormState\n        }\n    }\n\n    if (action.type === Constants.RESET_ERRORS) {\n        return {\n            ...state,\n            errors: {\n                ...errorsInitState\n            }\n        }\n    }\n\n    if (action.type === Constants.SET_ERROR) {\n        let newErrors = {...state.errors}\n        const errorType = action.payload\n\n        if (errorType === \"name\")\n            newErrors.nameError = true\n        if (errorType === \"cell\")\n            newErrors.cellError = true\n        if (errorType === \"address\")\n            newErrors.addressError = true\n\n        return {\n            ...state,\n            errors: {\n                ...newErrors\n            }\n        }\n    }\n\n    return state\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport { Provider } from \"react-redux\"\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}