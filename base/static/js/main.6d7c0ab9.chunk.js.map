{"version":3,"sources":["components/ProductsList/ProductsList.template.tsx","constants.ts","components/ProductsList/ProductsList.helpers.ts","components/ProductsList/ProductsList.constants.ts","components/ProductsList/ProductsList.initState.ts","components/Cart/Cart.constants.ts","components/ProductsList/ProductsList.component.tsx","components/ProductsList/index.ts","components/ProductsList/ProductsList.actions.ts","components/Cart/Cart.actions.ts","pages/Home.tsx","components/Cart/Cart.template.tsx","components/Cart/Cart.component.tsx","components/Cart/index.ts","components/OrderForm/OrderForm.template.tsx","components/OrderForm/OrderForm.constants.ts","components/OrderForm/OrderForm.component.tsx","components/OrderForm/OrderForm.helpers.ts","components/OrderForm/index.ts","components/OrderForm/OrderForm.actions.ts","pages/Cart.tsx","pages/Success.tsx","pages/Failed.tsx","components/TopNav/TopNav.template.tsx","components/TopNav/index.ts","components/TopNav/TopNav.component.tsx","components/Footer/Footer.template.tsx","components/Footer/index.ts","components/Footer/Footer.component.tsx","pages/HomeExt.tsx","App.tsx","components/TopNav/TopNav.initState.ts","components/Cart/Cart.initState.ts","components/OrderForm/OrderForm.initState.ts","store/index.ts","components/TopNav/TopNav.reducer.ts","components/ProductsList/ProductsList.reducer.ts","components/Cart/Cart.reducer.ts","components/OrderForm/OrderForm.reducer.ts","serviceWorker.ts","index.tsx"],"names":["CategoriesListTemplate","props","categories","changeFilter","categoryFilter","className","id","type","onClick","map","category","index","key","name","SingleProduct","product","addProduct","minusProduct","plusProduct","imageUrl","src","height","width","renderImage","image","description","weight","weight_points","price","count","ProductListTemplate","loading","loaded","products","role","MAIN_BACKEND","env","envPath","process","getProducts","a","axios","get","ProductListInitState","ProductListComponent","state","addProductToCart","bind","this","setInitState","then","response","tmpProducts","newProducts","newCategories","data","push","catch","err","resetProduct","totalPrice","React","Component","connect","reducer","ProductListReducer","dispatch","payload","Constants","HomePage","to","CartTemplate","totalCount","removeProduct","CartComponent","navigateHome","history","withRouter","CartReducer","OrderFormTemplate","user","deliveryData","paymentData","changeName","changeCell","changeAddress","changeRegion","changeComment","changePaymentMethod","createOrder","errors","onSubmit","htmlFor","placeholder","onChange","value","nameError","cell","cellError","style","region","address","addressError","rows","comment","checked","paymentType","OrderFormComponent","changeFormName","changeFormCell","changeFormAddress","changeFormRegion","changeFormComment","changeFormPaymentMethod","e","target","preventDefault","setError","resetErrors","isValid","length","compactProducts","postData","user_name","phone_number","compact_products","post","res","window","location","href","console","log","error","sendOrderData","OrderFormReducer","resetForm","CartPage","scrollTo","SuccessPage","FailedPage","TopNavTemplate","cartCount","FooterTemplate","alt","HomePageExt","App","path","exact","component","TopNavInitState","CartInitState","errorsInitState","OrderFormState","rootReducer","combineReducers","TopNavReducer","action","targetProduct","newCount","newProduct","newTotalCount","newTotalPrice","exist","result","onlyDigits","match","join","slice","newErrors","errorType","store","createStore","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d7c0ab9.chunk.js","sourcesContent":["import React from 'react'\nimport { ICategory, IProductListTemplate, IProduct } from './ProductsList.interface'\nimport './ProductsList.css'\n\n\ninterface ICategoryTemplate {\n    categories:ICategory[],\n    categoryFilter:number,\n    changeFilter:(payload:number) => void,\n}\n\ninterface ISingleProduct {\n    product: IProduct,\n    plusProduct:(payload:IProduct) => void,\n    minusProduct:(payload:IProduct) => void,\n    addProduct:(payload:IProduct) => void,\n\n}\n\nconst CategoriesListTemplate = (props:ICategoryTemplate) => {\n    const { categories, changeFilter, categoryFilter } = props\n    return (\n        <div className=\"categories-list\">\n            <button\n                id=\"category-all\"\n                type=\"button\"\n                className={`btn btn-custom category m-2 ${categoryFilter === 0 ? 'active' : ''}`}\n                onClick={() => changeFilter(0)}\n            >Меню</button>\n            {categories.map( (category, index) => {\n                return (\n                    <button\n                        key={`category-${index}`}\n                        className={`btn btn-custom category m-2 ${categoryFilter === category.id ? 'active' : ''}`}\n                        onClick={() => changeFilter(category.id)}\n                    >{category.name}</button>\n                )\n            } )}\n        </div>\n    )\n}\n\nconst renderImage = (imageUrl:string) => {\n    if (imageUrl) {\n        return (\n        <img src={`https://res.cloudinary.com/hydam019f/${imageUrl}`} height=\"225\" width=\"100%\"/>    \n        )\n    } \n}\n\nconst SingleProduct = (props:ISingleProduct) => {\n    const { product, addProduct, minusProduct, plusProduct } = props\n    return (\n        <div className=\"col-md-4 product-item\">\n            <div className=\"card mb-4 shadow-sm\">\n            {renderImage(product.image)}\n            <div className=\"card-body\">\n                <h3 className=\"product-item-title\">{product.name}</h3>\n                <p className=\"card-text product-item-desc\">{product.description}</p>\n                <h5 className=\"product-item-props\">\n                    <small className=\"text-muted mr-2\">{product.weight} {product.weight_points}</small>\n                    <span className=\"product-item-price\">{product.price} грн</span>\n                </h5>\n                <hr/>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-outline-custom\"\n                        onClick={() => addProduct(product)}\n                    >Додати</button>\n                    <div className=\"product-item-counter\">\n                        <span className=\"with-border minus\" onClick={() => {minusProduct(product)}}>-</span>\n                        <span className=\"with-border counter\">{product.count}</span>\n                        <span className=\"with-border plus\" onClick={() => {plusProduct(product)}}>+</span>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport const ProductListTemplate = (props:IProductListTemplate) => {\n    const { categories, loading, loaded,\n        plusProduct, minusProduct, addProduct, changeFilter, categoryFilter } = props\n\n    if (!loading && loaded)\n        return (\n            <div className=\"ProductList\">\n\n                <CategoriesListTemplate\n                    categories={categories}\n                    changeFilter={changeFilter}\n                    categoryFilter={categoryFilter}\n                />\n\n                    {categories.map( (category) => {\n                        if (category.id === categoryFilter || !categoryFilter)\n                        return (\n                            <div key={`category-${category.id}`} className=\"mb-3\">\n                                <h1 className=\"category-name\">{category.name}</h1>\n                                <div className=\"row\">\n                                {category.products.map( product => {\n                                    return (\n                                        <SingleProduct\n                                            key={`product-${product.id}`}\n                                            product={product}\n                                            plusProduct={plusProduct}\n                                            minusProduct={minusProduct}\n                                            addProduct={addProduct}\n                                        />\n                                    )\n                                })}\n                                </div>\n                            </div>\n                        )\n                    })}                  \n\n                <CategoriesListTemplate\n                    categories={categories}\n                    changeFilter={changeFilter}\n                    categoryFilter={categoryFilter}\n                />\n\n            </div>\n        )\n    else if (loading && loaded)\n        return (\n            <h1>На вдалось завантажити меню</h1>\n        )\n    else if (loading && !loaded)\n        return (\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n    else\n        return (\n            <h1></h1>\n        )\n}","const envPath = (env:string):string => {\n    switch (env) {\n        case \"development\":\n            return \"http://localhost:8000\"\n\n        case \"test\":\n            return \"\"\n\n        case \"production\":\n            return \"\"\n    \n        default:\n            return \"\"\n    }\n}\n\nexport const MAIN_BACKEND = envPath(process.env.NODE_ENV)\n","import axios from 'axios'\nimport { MAIN_BACKEND } from '../../constants'\n\n\nexport const getProducts = async () => {\n    return await axios.get(`${MAIN_BACKEND}/product/`)\n}\n\n\nexport const getAll = () => {\n    return [{\n        id: 1,\n        name: \"category1\",\n        products: [{\n            id: 1,\n            name: \"Product1\",\n            description: \"desc, longer, description, should, be here, some words, lalka, pipka\",\n            price: 10,\n            alailable: true,\n            weight: 200,\n            weight_points: \"г\",\n            category: 1,\n            image: '',\n        }]\n    },{\n        id: 2,\n        name: \"category2\",\n        products: [{\n            id: 2,\n            name: \"Product2\",\n            description: \"desc, longer, description, should\",\n            price: 32,\n            alailable: true,\n            weight_points: \"мл\",\n            weight: 300,\n            category: 2,\n            image: '',\n        }]\n    }]\n}","export default {\n    SET_INIT_STATE: \"SET_INIT_STATE_PRODUCCT_LIST\",\n    PLUS_PRODUCT: \"PLUS_PRODUCT_PRODUCCT_LIST\",\n    MINUS_PRODUCT: \"MINUS_PRODUCT_PRODUCCT_LIST\",\n    RESET_PRODUCT: \"RESET_PRODUCT_PRODUCCT_LIST\",\n    CHANGE_FILTER: \"CHANGE_FILTER_PRODUCCT_LIST\",\n}","import { IProductList } from \"./ProductsList.interface\"\n\n\nexport const ProductListInitState:IProductList = {\n    products: [],\n    categories: [],\n    loaded: false,\n    loading: false,\n    categoryFilter: 0,\n}","export default {\n    ADD_PRODUCT: \"ADD_PRODUCT_TO_CART\",\n    REMOVE_PRODUCT: \"REMOVE_PRODUCT_FROM_CART\",\n    PLUS_PRODUCT: \"PLUS_PRODUCT_TO_CART\",\n    MINUS_PRODUCT: \"MINUS_PRODUCT_TO_CART\",\n    CLEAN_CART: \"CLEAN_CART\",\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { ProductListTemplate } from './ProductsList.template'\nimport { IProductList, IProduct, IProductListExt, ICategory } from './ProductsList.interface'\nimport { getProducts } from './ProductsList.helpers'\nimport { setInitState } from './ProductsList.actions'\nimport { ProductListInitState } from \"./ProductsList.initState\"\nimport { plusProduct, minusProduct, resetProduct, changeFilter } from './ProductsList.actions'\nimport { addProduct } from '../Cart/Cart.actions'\nimport { ICartProduct } from '../Cart/Cart.interface'\n\n\nconst mapStateToProps = (reducer:any):IProductList => {\n    const { ProductListReducer } = reducer\n    return ProductListReducer\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setInitState:(payload:IProductList) => dispatch(setInitState(payload)),\n        plusProduct:(payload:IProduct) => dispatch(plusProduct(payload)),\n        minusProduct:(payload:IProduct) => dispatch(minusProduct(payload)),\n        resetProduct:(payload:IProduct) => dispatch(resetProduct(payload)),\n        addProduct:(payload:ICartProduct) => {dispatch(addProduct(payload))},\n        changeFilter:(payload:number) => {dispatch(changeFilter(payload))},\n    }\n}\n\n\nclass ProductListComponent extends React.Component<IProductListExt, IProductList> {\n\n    constructor(props: IProductListExt, state: IProductList) {\n        super(props, state)\n\n        this.addProductToCart = this.addProductToCart.bind(this)\n    }\n\n    componentDidMount() {\n        const { setInitState, categoryFilter, loaded, loading } = this.props\n\n        if (!loading && loaded)\n            return true\n\n        setInitState({\n            ...ProductListInitState,\n            loading: true,\n        })\n\n        const response = getProducts()\n\n        response.then((response) => {\n            let newProducts: IProduct[] = []\n            let tmpProducts: IProduct[]\n            let newCategories: ICategory[] = []\n    \n            for (let category of response.data) {\n                tmpProducts = []\n                for (let product of category.products) {\n                    tmpProducts.push({\n                        ...product,\n                        count: 1\n                    })\n                }\n    \n                newCategories.push({\n                    id: category.id,\n                    name: category.name,\n                    products: tmpProducts,\n                })\n                newProducts = [...newProducts, ...tmpProducts]\n            }\n\n            setInitState({\n                categories: newCategories,\n                products: newProducts,\n                loading: false,\n                loaded: true,\n                categoryFilter,\n            })\n        }).catch(err => {\n            setInitState({\n                categories: [],\n                products: [],\n                loading: true,\n                loaded: true,\n                categoryFilter: 0,\n            })\n        })\n\n    }\n\n    addProductToCart(product:IProduct) {\n        const { addProduct, resetProduct } = this.props\n        addProduct({\n            id:product.id,\n            name:product.name,\n            price:product.price,\n            count:product.count,\n            totalPrice:product.price * product.count\n        })\n        resetProduct(product)\n    }\n\n    render() {\n        const { products, categories, loaded, loading, plusProduct,\n            minusProduct, categoryFilter, changeFilter } = this.props\n        return (\n            <ProductListTemplate\n                products={products}\n                categories={categories}\n                loaded={loaded}\n                loading={loading}\n                plusProduct={plusProduct}\n                minusProduct={minusProduct}\n                categoryFilter={categoryFilter}\n                addProduct={product => this.addProductToCart(product)}\n                changeFilter={changeFilter}\n            />\n        )\n    }\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListComponent)","import ProductsListComponent from \"./ProductsList.component\"\n\n\nexport default {\n    Component: ProductsListComponent,\n}","import Constants from './ProductsList.constants'\nimport { IProductList, IProduct } from './ProductsList.interface'\n\n\nexport const setInitState = (payload:IProductList) => {\n    return {type: Constants.SET_INIT_STATE, payload}\n}\n\nexport const plusProduct = (product:IProduct) => {\n    return {type: Constants.PLUS_PRODUCT, payload:product}\n}\n\nexport const minusProduct = (product:IProduct) => {\n    return {type: Constants.MINUS_PRODUCT, payload:product}\n}\n\nexport const resetProduct = (product:IProduct) => {\n    return {type: Constants.RESET_PRODUCT, payload:product}\n}\n\nexport const changeFilter = (categoryId:number) => {\n    return {type: Constants.CHANGE_FILTER, payload:categoryId}\n}","import Constants from './Cart.constants'\nimport { ICartProduct } from './Cart.interface'\n\n\nexport const addProduct = (product:ICartProduct) => {\n    return {type:Constants.ADD_PRODUCT, payload:product}\n}\n\nexport const removeProduct = (product:ICartProduct) => {\n    return {type:Constants.REMOVE_PRODUCT, payload:product}\n}\n\nexport const plusProduct = (product:ICartProduct) => {\n    return {type:Constants.PLUS_PRODUCT, payload:product}\n}\n\nexport const minusProduct = (product:ICartProduct) => {\n    return {type:Constants.MINUS_PRODUCT, payload:product}\n}\n\nexport const cleanCart = () => {\n    return {type:Constants.CLEAN_CART, payload:{}}\n}","import React from 'react'\nimport ProductList from '../components/ProductsList'\nimport { Link } from 'react-router-dom'\n\nconst HomePage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"jumbotron p-4 p-md-5 text-white rounded bg-dark\">\n                <div className=\"jumbotron-bg\"></div>\n                <div className=\"col-md-12 px-0\">\n                <h3 className=\"display-6 font-italic text-left\">Відтепер щодня з 12:00 до 20:00 ви можете замовити свої улюблені страви з доставкою від Maestro!</h3>\n                <p className=\"lead my-3 text-left\">Залишаючись вдома ви рятуєте життя, а ми хочемо зробити ваш карантин смачним і корисним!</p>\n                <p className=\"lead mt-2\">\n                    <Link to=\"/conditions\" className=\"text-white font-weight-bold\">Умови доставки</Link>\n                </p>\n                </div>\n            </div>\n\n            <ProductList.Component />\n\n        </div>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { ICartStateExt } from './Cart.interface'\nimport './Cart.css'\n\n\nexport const CartTemplate = (props:ICartStateExt) => {\n    const { products, totalCount, totalPrice, plusProduct, minusProduct, removeProduct } = props\n    return (\n        <div className=\"CartTemplate\">\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n              <span>Ваше замовлення</span>\n              <span className=\"badge badge-custom badge-pill\">{totalCount}</span>\n            </h4>\n            <ul className=\"list-group mb-3\">\n              {products.map( (product, index ) => {\n                return (\n                  <li key={`cart-item-${index}`} className=\"list-group-item cart-item\">\n                    <div className=\"d-flex justify-content-between lh-condensed mb-2\">\n                      <h6 className=\"my-0\">{product.name}</h6>\n                      <span>{product.price}грн X {product.count} = {product.totalPrice}грн</span>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div className=\"cart-item-counter\">\n                          <span className=\"with-border minus\" onClick={() => {minusProduct(product)}}>-</span>\n                          <span className=\"with-border counter\">{product.count}</span>\n                          <span className=\"with-border plus\" onClick={() => {plusProduct(product)}}>+</span>\n                      </div>\n                      <div>\n                        <span className=\"with-border remove\" onClick={() => removeProduct(product)}>X</span>\n                      </div>\n                    </div>\n                  </li>  \n                )\n              })}\n              <li className=\"list-group-item d-flex justify-content-between total-block\">\n                <span>Всього</span>\n                <strong>{totalPrice}грн</strong>\n              </li>\n\n              <div className=\"invalid-feedback d-block\">*Ціна вказана без врахування знижки і доставки</div>\n            </ul>\n        </div>\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { ICartState, ICartStateExt, ICartProduct } from './Cart.interface'\nimport { CartTemplate } from './Cart.template'\nimport { plusProduct, minusProduct, removeProduct } from '../Cart/Cart.actions'\n\n\nconst mapStateToProps = (reducer:any):ICartState => {\n    const { CartReducer } = reducer\n    return CartReducer\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        plusProduct:(product:ICartProduct) => dispatch(plusProduct(product)),\n        minusProduct:(product:ICartProduct) => dispatch(minusProduct(product)),\n        removeProduct:(product:ICartProduct) => dispatch(removeProduct(product)),\n    }\n}\n\nclass CartComponent extends React.Component<ICartStateExt, ICartState> {\n\n    constructor(props:ICartStateExt, state: ICartState) {\n        super(props, state)\n\n        this.navigateHome = this.navigateHome.bind(this)\n    }\n\n    navigateHome() {\n        this.props.history.push('/')\n    }\n\n    componentDidMount() {\n        const { totalCount } = this.props\n        if (totalCount === 0)\n            this.navigateHome()\n    }\n\n    componentDidUpdate() {\n        const { totalCount } = this.props\n        if (totalCount === 0)\n            this.navigateHome()\n    }\n\n    render() {\n        return (\n            <CartTemplate {...this.props}/>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartComponent))","import CartComponent from './Cart.component'\n\n\nexport default {\n    Component: CartComponent,\n}","import React from 'react'\nimport { IOrderFormTemplate } from './OrderForm.interface'\nimport './OrderForm.css'\n\n\nexport const OrderFormTemplate = (props:IOrderFormTemplate) => {\n    const {\n        user,\n        deliveryData,\n        paymentData,\n        changeName,\n        changeCell,\n        changeAddress,\n        changeRegion,\n        changeComment,\n        changePaymentMethod,\n        createOrder,\n        errors,\n    } = props\n    return (\n        <form className=\"needs-validation OrderFormTemplate\" onSubmit={createOrder}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"address\">Ім'я</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"\"\n                    onChange={changeName}\n                    value={user.name}\n                />\n                <div className={`invalid-feedback ${errors.nameError ? \"d-block\" : \"\"}`}>\n                Вкажіть ваше ім'я.\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"cell\">Номер телефону</label>\n                <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">+380</span>\n                </div>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"cell\"\n                    placeholder=\"XXXXXXXXX\"\n                    onChange={changeCell}\n                    value={user.cell}\n                    />\n                <div className={`invalid-feedback ${errors.cellError ? \"d-block\" : \"\"}`} style={{width: \"100%\"}}>\n                    Номер телефону є обов'язковим.\n                </div>\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"city\">Регіон</label>\n                <select\n                    onChange={changeRegion}\n                    value={deliveryData.region}\n                    className=\"custom-select d-block w-100\"\n                    id=\"city\"\n                >\n                    <option value=\"lviv\">Львів та Брюховичі</option>\n                    <option value=\"lviv region\">Околиці Львова</option>\n                    <option value=\"by-client\">Самовивіз (знижка 10%)</option>\n                </select>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"address\">Адреса</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"address\"\n                    placeholder=\"вул. Шевченка 1, кв 1\"\n                    onChange={changeAddress}\n                    value={deliveryData.address}\n                />\n                <div className={`invalid-feedback ${errors.addressError ? \"d-block\" : \"\"}`}>\n                Введіть адресу доставки.\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"comment\">Коментарій</label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"comment\"\n                    rows={5}\n                    placeholder=\"додаткові пропозиції...\"\n                    onChange={changeComment}\n                    value={deliveryData.comment}\n                ></textarea>\n            </div>\n\n            <hr className=\"mb-4\" />\n\n            <h4 className=\"mb-3\">Тип оплати</h4>\n            <div className=\"d-block my-3\">\n                <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"cash\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        checked={paymentData.paymentType == '1'}\n                        value={'1'}\n                        onChange={changePaymentMethod}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"cash\">Готівка</label>\n                </div>\n                <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"debit\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        checked={paymentData.paymentType == '2'}\n                        value={'2'}\n                        onChange={changePaymentMethod}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debit\">Карткою при отриманні</label>\n                </div>\n            </div>\n\n            <hr className=\"mb-4\" />\n            <button className=\"btn btn-custom btn-lg btn-block mb-3\" type=\"submit\">Створити замовлення</button>\n        </form>\n    )\n}","export default {\n    CHANGE_NAME: \"CHANGE_NAME\",\n    CHANGE_CELL: \"CHANGE_CELL\",\n    CHANGE_ADDRESS: \"CHANGE_ADDRESS\",\n    CHANGE_REGION: \"CHANGE_REGION\",\n    CHANGE_COMMENT: \"CHANGE_COMMENT\",\n    CHANGE_PAYMENT_METHOD: \"CHANGE_PAYMENT_METHOD\",\n    RESET_FORM: \"RESET_FORM\",\n    RESET_ERRORS: \"RESET_ERRORS\",\n    SET_ERROR: \"SET_ERROR\",\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IOrderForm, IOrderFormExt } from './OrderForm.interface'\nimport { OrderFormTemplate } from './OrderForm.template'\nimport {\n    changeName,\n    changeCell,\n    changeAddress,\n    changeRegion,\n    changeComment,\n    changePaymentMethod,\n    resetForm,\n    resetErrors,\n    setError,\n} from './OrderForm.actions'\nimport { sendOrderData } from './OrderForm.helpers'\n\n\nconst mapStateToProps = (reducer:any):IOrderForm => {\n    const { OrderFormReducer, CartReducer } = reducer\n    return {\n        ...OrderFormReducer,\n        products:CartReducer.products,\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeName:(payload:string) => dispatch(changeName(payload)),\n        changeCell:(payload:string) => dispatch(changeCell(payload)),\n        changeAddress:(payload:string) => dispatch(changeAddress(payload)),\n        changeRegion:(payload:string) => dispatch(changeRegion(payload)),\n        changeComment:(payload:string) => dispatch(changeComment(payload)),\n        changePaymentMethod:(payload:string) => dispatch(changePaymentMethod(payload)),\n        resetForm:() => dispatch(resetForm()),\n        resetErrors:() => dispatch(resetErrors()),\n        setError:(name:string) => dispatch(setError(name)),\n    }\n}\n\n\nclass OrderFormComponent extends React.Component<IOrderFormExt, IOrderForm> {\n\n    constructor(props:IOrderFormExt, state:IOrderForm) {\n        super(props, state)\n\n        this.changeFormName = this.changeFormName.bind(this)\n        this.changeFormCell = this.changeFormCell.bind(this)\n        this.changeFormAddress = this.changeFormAddress.bind(this)\n        this.changeFormRegion = this.changeFormRegion.bind(this)\n        this.changeFormComment = this.changeFormComment.bind(this)\n        this.changeFormPaymentMethod = this.changeFormPaymentMethod.bind(this)\n        this.createOrder = this.createOrder.bind(this)\n    }\n\n    changeFormName(e:any) {\n        const { changeName } = this.props\n        changeName(e.target.value)\n    }\n\n    changeFormCell(e:any) {\n        const { changeCell } = this.props\n        changeCell(e.target.value)\n    }\n\n    changeFormAddress(e:any) {\n        const { changeAddress } = this.props\n        changeAddress(e.target.value)\n    }\n\n    changeFormRegion(e:any) {\n        const { changeRegion } = this.props\n        changeRegion(e.target.value)\n    }\n\n    changeFormComment(e:any) {\n        const { changeComment } = this.props\n        changeComment(e.target.value)\n    }\n\n    changeFormPaymentMethod(e:any) {\n        const { changePaymentMethod } = this.props\n        changePaymentMethod(e.target.value)\n    }\n\n    createOrder(e:any) {\n        e.preventDefault()\n        const { setError, resetErrors } = this.props\n        const { user, deliveryData, paymentData, products } = this.props\n        resetErrors()\n        let isValid = true\n\n        if (user.name.length === 0){\n            setError(\"name\")\n            isValid = false\n        }\n        if (user.cell.length < 9){\n            setError(\"cell\")\n            isValid = false\n        }\n        if (deliveryData.address.length < 5){\n            setError(\"address\")\n            isValid = false\n        }\n        if (isValid) {\n            sendOrderData({user, deliveryData, paymentData, products})\n        }\n    }\n\n    render() {\n        const {\n            user,\n            deliveryData,\n            paymentData,\n            errors,\n        } = this.props\n        return (\n            <OrderFormTemplate\n                user={user}\n                deliveryData={deliveryData}\n                paymentData={paymentData}\n                changeName={this.changeFormName}\n                changeCell={this.changeFormCell}\n                changeAddress={this.changeFormAddress}\n                changeRegion={this.changeFormRegion}\n                changeComment={this.changeFormComment}\n                changePaymentMethod={this.changeFormPaymentMethod}\n                createOrder={this.createOrder}\n                errors={errors}\n            />\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderFormComponent)","import axios from 'axios'\nimport { MAIN_BACKEND } from '../../constants'\n\n\ninterface CompactProduct {\n    id:number,\n    count:number,\n}\n\nexport const sendOrderData = (data:any) => {\n    try {\n        const { user, deliveryData, paymentData, products } = data\n        let compactProducts:CompactProduct[] = []\n\n        if (products.length === 0)\n            return false\n\n        for (let product of products) {\n            compactProducts.push({\n                id:product.id,\n                count:product.count,\n            })\n        }\n        const postData = {\n            user_name: user.name,\n            phone_number: user.cell,\n            address: deliveryData.address,\n            region: deliveryData.region,\n            comment: deliveryData.comment,\n            compact_products: compactProducts\n        }\n\n        axios.post(`${MAIN_BACKEND}/order/`, postData).then((res) => {\n            window.location.href = \"/success\"\n            console.log(res)\n        }).catch((err) => {\n            window.location.href = \"/failed\"\n            console.log(err)\n        })\n\n        return true\n    } catch (error) {\n        return false\n    }\n} ","import OrderFormComponent from \"./OrderForm.component\"\n\n\nexport default {\n    Component:OrderFormComponent\n}","import Constants from './OrderForm.constants'\n\n\nexport const changeName = (payload:string) => {\n    return {type:Constants.CHANGE_NAME, payload}\n}\n\nexport const changeCell = (payload:string) => {\n    return {type:Constants.CHANGE_CELL, payload}\n}\n\nexport const changeAddress = (payload:string) => {\n    return {type:Constants.CHANGE_ADDRESS, payload}\n}\n\nexport const changeRegion = (payload:string) => {\n    return {type:Constants.CHANGE_REGION, payload}\n}\n\nexport const changeComment = (payload:string) => {\n    return {type:Constants.CHANGE_COMMENT, payload}\n}\n\nexport const changePaymentMethod = (payload:string) => {\n    return {type:Constants.CHANGE_PAYMENT_METHOD, payload}\n}\n\nexport const resetForm = () => {\n    return {type:Constants.RESET_FORM, payload:{}}\n}\n\nexport const resetErrors = () => {\n    return {type:Constants.RESET_ERRORS, payload:{}}\n}\n\nexport const setError = (name:string) => {\n    return {type:Constants.SET_ERROR, payload:name}\n}","import React from 'react'\nimport Cart from '../components/Cart'\nimport OrderForm from '../components/OrderForm'\n\n\nconst CartPage = () => {\n    window.scrollTo(0, 0)\n    return (\n        <div className=\"container cart-container\">\n            <div className=\"row\">\n                <div className=\"col-md-4 order-md-2 mb-4\">\n                    <Cart.Component />\n                </div>\n\n                <div className=\"col-md-8 order-md-1\">\n                    <h4 className=\"mb-3\">Деталі замовлення</h4>\n                    <OrderForm.Component />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CartPage","import React from 'react'\n\n\nconst SuccessPage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n            <div className=\"col-md-5 p-lg-5 mx-auto my-5\">\n                <h1 className=\"display-4 font-weight-normal\">Ваше замовлення прийняте</h1>\n                <p className=\"lead font-weight-normal\">Незабаром вам зателефонують</p>\n                <a className=\"btn btn-outline-secondary\" href=\"/\">На головну</a>\n            </div>\n            <div className=\"product-device shadow-sm d-none d-md-block\"></div>\n            <div className=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SuccessPage","import React from 'react'\n\n\nconst FailedPage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n            <div className=\"col-md-5 p-lg-5 mx-auto my-5\">\n                <h1 className=\"display-4 font-weight-normal\">Сталась помилка(</h1>\n                <p className=\"lead font-weight-normal\">З технічних причин замовлення не може бути прийняте</p>\n                <p className=\"lead font-weight-normal\">Але ви можете зробити замовлення по телефону</p>\n                <p className=\"lead font-weight-normal\">+38 098 982 35 82</p>\n                <a className=\"btn btn-outline-secondary\" href=\"/\">На головну</a>\n            </div>\n            <div className=\"product-device shadow-sm d-none d-md-block\"></div>\n            <div className=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default FailedPage","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ITopNavInterface } from './TopNav.interface'\nimport './TopNav.css'\n\n\nconst TopNavTemplate = (props:ITopNavInterface) => {\n    const { cartCount } = props\n    return (\n        <div className=\"d-flex flex-column flex-md-row align-items-center fixed-top p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\">\n                <img className=\"topnav-logo\" src=\"/static/images/logo.jpg\"/>\n                <span className=\"d-none d-md-block\">+38 098 982 35 82</span>\n            </h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n            <Link className=\"p-2 text-dark\" to=\"/\">Головна</Link>\n            </nav>\n            <Link className=\"btn btn-outline-custom\" to=\"/cart\">\n                <span className=\"mr-1\">Замовлення</span>\n                <span className=\"badge badge-light\">{cartCount}</span>\n            </Link>\n        </div>\n    )\n}\n\nexport default TopNavTemplate","import TopNavComponent from './TopNav.component'\n\nexport default {\n    Component: TopNavComponent\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport TopNavTemplate from './TopNav.template'\nimport { ITopNavInterface } from './TopNav.interface'\n\n\nconst mapStateToProps = (reducer:any):ITopNavInterface => {\n    const { CartReducer } = reducer\n    return {\n        cartCount:CartReducer.totalCount,\n    }\n}\n\nconst TopNavComponent = (props:ITopNavInterface) => {\n    return (<TopNavTemplate {...props}/>)\n}\n\nexport default connect(mapStateToProps)(TopNavComponent)","import React from 'react'\nimport './Footer.css'\n\n\nexport const FooterTemplate = () => {\n    return (\n        <footer className=\"container pt-4 my-md-5 pt-md-5 border-top Footer\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md\">\n                    <img className=\"mb-2\" src=\"/docs/4.4/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"24\" height=\"24\" />\n                    <small className=\"d-block mb-3 text-muted\">© 2015-2020</small>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Умови доставки:</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>Самовивіз - знижка -10%</li>\n                    <li>Мінімальне замовлення - 150грн</li>\n                    <li>Доставка 50гр (в межах Львова та Боюхович)</li>\n                    <li>За межі Львова - вартість за тарифом таксі</li>\n                    <li>При замовленні від 500 грн - доставка БЕЗКОШТОВНА (в межах Львова та Брюхович)</li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Час доставки</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>59 хв - 2 год ( залежно яке замовлення і куди везти)</li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Як оплатити?</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>Готівкою кур’єру</li>\n                    <li>Карткою через термінал у кур’єра</li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    )\n}","import { FooterComponent } from './Footer.component'\n\n\nexport default {\n    Compenent: FooterComponent\n}","import React from 'react'\nimport { FooterTemplate } from './Footer.template'\n\n\nexport const FooterComponent = () => {\n    return (<FooterTemplate />)\n}","import React from 'react'\nimport ProductList from '../components/ProductsList'\nimport { Link } from 'react-router-dom'\n\nconst HomePageExt = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"jumbotron p-4 p-md-5 text-white rounded bg-dark\">\n                <div className=\"jumbotron-bg\"></div>\n                <div className=\"col-md-12 px-0\">\n                <h3 className=\"display-6 font-italic text-left\">Відтепер щодня з 12:00 до 20:00 ви можете замовити свої улюблені страви з доставкою від Maestro!</h3>\n                <p className=\"lead my-3 text-left\">Залишаючись вдома ви рятуєте життя, а ми хочемо зробити ваш карантин смачним і корисним!</p>\n                <p className=\"lead my-3 text-left\">Умови доставки:<br/>\n                    ➖ Самовивіз - знижка -10%<br/>\n                    ➖ Мінімальне замовлення - 150грн<br/>\n                    ➖ Доставка 50грн (в межах Львова та Брюхович)<br/>\n                    ➖ За межі Львова - вартість за тарифом таксі<br/>\n                    ➖ При замовленні від 500 грн - доставка БЕЗКОШТОВНА (в межах Львова та Брюхович)</p>\n                <p className=\"lead my-3 text-left\">Час доставки:<br/>\n                    ➖ 59 хв - 2 год ( залежно яке замовлення і куди везти)</p>\n                <p className=\"lead my-3 text-left\">Як оплатити?<br/>\n                    ➖ Готівкою кур’єру<br/>\n                    ➖ Карткою через термінал у кур’єра<br/></p>\n                <p className=\"lead mt-2\">\n                    <Link to=\"/\" className=\"text-white font-weight-bold\">Сховати</Link>\n                </p>\n                </div>\n            </div>\n\n            <ProductList.Component />\n\n        </div>\n    )\n}\n\nexport default HomePageExt","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\nimport HomePage from './pages/Home'\nimport CartPage from './pages/Cart'\nimport SuccessPage from './pages/Success'\nimport FailedPage from './pages/Failed'\nimport TopNav from './components/TopNav'\nimport Footer from './components/Footer'\n// import logo from './logo.svg'\nimport './App.css'\nimport HomePageExt from './pages/HomeExt'\n\nconst App =() => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <TopNav.Component />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/conditions\" exact component={HomePageExt} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/success\" component={SuccessPage} />\n          <Route path=\"/failed\" component={FailedPage} />\n          <Route path=\"*\">\n            <Redirect to=\"/\"/>\n          </Route>\n        </Switch>\n        <Footer.Compenent />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ITopNavInterface } from \"./TopNav.interface\"\n\n\nexport const TopNavInitState:ITopNavInterface = {\n    cartCount: 0,\n}","import { ICartState } from \"./Cart.interface\"\n\nexport const CartInitState:ICartState = {\n    products: [],\n    totalPrice:0,\n    totalCount:0,\n}","import { IUser, IDeliveryData, IPaymentData, IOrderForm, IErrors } from \"./OrderForm.interface\"\nimport { ICartProduct } from \"../Cart/Cart.interface\"\n\n\nexport const userInitState:IUser = {\n    name: \"\",\n    cell: \"\",\n}\n\nexport const deliveryDataInitState:IDeliveryData = {\n    region: \"lviv\",\n    address: \"\",\n    comment: \"\",\n}\n\nexport const productsInitState:ICartProduct[] = []\n\nexport const paymentDataInitState:IPaymentData = {\n    paymentType: '1',\n}\n\nexport const errorsInitState:IErrors = {\n    nameError: false,\n    cellError: false,\n    addressError: false,\n}\n\nexport const OrderFormState:IOrderForm = {\n    user:userInitState,\n    deliveryData:deliveryDataInitState,\n    products:productsInitState,\n    paymentData:paymentDataInitState,\n    errors:errorsInitState,\n}","import { createStore, combineReducers } from \"redux\"\nimport { TopNavReducer } from '../components/TopNav/TopNav.reducer'\nimport { ProductListReducer } from '../components/ProductsList/ProductsList.reducer'\nimport { CartReducer } from \"../components/Cart/Cart.reducer\"\nimport { OrderFormReducer } from \"../components/OrderForm/OrderForm.reducer\"\n\n\nconst rootReducer = combineReducers({\n    TopNavReducer,\n    ProductListReducer,\n    CartReducer,\n    OrderFormReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react'\nimport { TopNavInitState } from './TopNav.initState'\n\n\nexport const TopNavReducer = (state = TopNavInitState, action:any) => {\n    return state\n}","import { IProductList, IProduct, ICategory } from \"./ProductsList.interface\"\nimport { ProductListInitState } from \"./ProductsList.initState\"\nimport Constants from './ProductsList.constants'\n\n\nexport const ProductListReducer = (state:IProductList = ProductListInitState, action:any) => {\n\n    if (action.type === Constants.SET_INIT_STATE) {\n        return action.payload\n    }\n\n    if (action.type === Constants.PLUS_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        newProducts.push({\n                            ...product,\n                            count: product.count + 1\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.MINUS_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        const newCount = product.count > 1 ? product.count - 1 : 1\n                        newProducts.push({\n                            ...product,\n                            count: newCount\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.RESET_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        newProducts.push({\n                            ...product,\n                            count: 1\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.CHANGE_FILTER) {\n        return {\n            ...state,\n            categoryFilter:action.payload,\n        }\n    }\n\n    return state\n}","import { ICartState, ICartProduct } from \"./Cart.interface\"\nimport { CartInitState } from \"./Cart.initState\"\nimport Constants from './Cart.constants'\n\n\nexport const CartReducer = (state:ICartState = CartInitState, action:any):ICartState => {\n\n    if (action.type === Constants.ADD_PRODUCT) {\n        const newProduct:ICartProduct = action.payload\n        let newProducts:ICartProduct[] = []\n        let newTotalCount = 0\n        let newTotalPrice = 0\n        let exist = false\n        for (let product of state.products) {\n            if (product.id === newProduct.id) {\n                newProducts.push(newProduct)\n                newTotalCount += newProduct.count\n                newTotalPrice += newProduct.totalPrice\n                exist = true\n            } else {\n                newProducts.push(product)\n                newTotalCount += product.count\n                newTotalPrice += product.totalPrice\n            }\n        }\n        if (!exist) {\n            newProducts.push(newProduct)\n            newTotalCount += newProduct.count\n            newTotalPrice += newProduct.totalPrice\n        }\n        const result = {\n            products: newProducts,\n            totalCount: newTotalCount,\n            totalPrice: newTotalPrice,\n        }\n        return result\n    }\n\n    if (action.type === Constants.REMOVE_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        for (let product of state.products) {\n            if (product.id !== targetProduct.id) {\n                newProducts.push(product)\n            }\n        }\n        return {\n            products:newProducts,\n            totalCount: state.totalCount - targetProduct.count,\n            totalPrice: state.totalPrice - targetProduct.totalPrice,\n        }\n    }\n\n    if (action.type === Constants.PLUS_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        for (let product of state.products) {\n            if (product.id === targetProduct.id) {\n                newProducts.push({\n                    ...product,\n                    count: product.count + 1,\n                    totalPrice: product.totalPrice + product.price,\n                })\n            } else {\n                newProducts.push(product)\n            }\n        }\n        return {\n            products: newProducts,\n            totalCount: state.totalCount + 1,\n            totalPrice: state.totalPrice + targetProduct.price\n        }\n    }\n\n    if (action.type === Constants.MINUS_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        let newTotalCount = 0\n        let newTotalPrice = 0\n        for (let product of state.products) {\n            if (product.id === targetProduct.id) {\n                const newCount = product.count - 1\n                if (newCount >= 1) {\n                    newProducts.push({\n                        ...product,\n                        count: newCount,\n                        totalPrice: product.price * newCount\n                    })    \n                    newTotalCount += newCount\n                    newTotalPrice += product.price * newCount\n                }\n                    \n            } else {\n                newProducts.push(product)\n                newTotalCount += product.count\n                newTotalPrice += product.totalPrice\n            }\n        }\n        return {\n            products: newProducts,\n            totalCount: newTotalCount,\n            totalPrice: newTotalPrice,\n        }\n    }\n\n    if (action.type === Constants.CLEAN_CART) {\n        return {\n            products:[],\n            totalCount: 0,\n            totalPrice: 0,\n        }\n    }\n\n    return state\n}","import { IOrderForm } from \"./OrderForm.interface\"\nimport { OrderFormState, errorsInitState } from \"./OrderForm.initState\"\nimport Constants from './OrderForm.constants'\n\n\nexport const OrderFormReducer = (state:IOrderForm = OrderFormState, action:any) => {\n\n    if (action.type === Constants.CHANGE_NAME) {\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                name: action.payload,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_CELL) {\n        let onlyDigits = action.payload.match(/\\d/g)\n        let cell:string = onlyDigits ? onlyDigits.join(\"\") : \"\"\n        if (cell.length > 9)\n            cell = cell.slice(0, 9)\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                cell,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_REGION) {\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                region: action.payload,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_ADDRESS) {\n        let address = action.payload\n        if (address.length > 32)\n            address = address.slice(0, 32)\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                address,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_COMMENT) {\n        let comment = action.payload\n        if (comment.length > 256)\n            comment = comment.slice(0, 256)\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                comment,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_PAYMENT_METHOD) {\n        let paymentType = action.payload\n        return {\n            ...state,\n            paymentData: {\n                ...state.paymentData,\n                paymentType,\n            }\n        }\n    }\n\n    if (action.type === Constants.RESET_FORM) {\n        return {\n            ...OrderFormState\n        }\n    }\n\n    if (action.type === Constants.RESET_ERRORS) {\n        return {\n            ...state,\n            errors: {\n                ...errorsInitState\n            }\n        }\n    }\n\n    if (action.type === Constants.SET_ERROR) {\n        let newErrors = {...state.errors}\n        const errorType = action.payload\n\n        if (errorType === \"name\")\n            newErrors.nameError = true\n        if (errorType === \"cell\")\n            newErrors.cellError = true\n        if (errorType === \"address\")\n            newErrors.addressError = true\n\n        return {\n            ...state,\n            errors: {\n                ...newErrors\n            }\n        }\n    }\n\n    return state\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport { Provider } from \"react-redux\"\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}