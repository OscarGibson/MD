{"version":3,"sources":["components/ProductsList/ProductsList.template.tsx","constants.ts","components/ProductsList/ProductsList.helpers.ts","components/ProductsList/ProductsList.constants.ts","components/ProductsList/ProductsList.initState.ts","components/Cart/Cart.constants.ts","components/ProductsList/ProductsList.component.tsx","components/ProductsList/index.ts","components/ProductsList/ProductsList.actions.ts","components/Cart/Cart.actions.ts","pages/Home.tsx","components/Cart/Cart.template.tsx","components/Cart/Cart.component.tsx","components/Cart/index.ts","components/OrderForm/OrderForm.template.tsx","components/OrderForm/OrderForm.constants.ts","components/OrderForm/OrderForm.component.tsx","components/OrderForm/OrderForm.helpers.ts","components/OrderForm/index.ts","components/OrderForm/OrderForm.actions.ts","pages/Cart.tsx","pages/Success.tsx","pages/Failed.tsx","components/TopNav/TopNav.template.tsx","components/TopNav/index.ts","components/TopNav/TopNav.component.tsx","components/Footer/Footer.template.tsx","components/Footer/index.ts","components/Footer/Footer.component.tsx","App.tsx","components/TopNav/TopNav.initState.ts","components/Cart/Cart.initState.ts","components/OrderForm/OrderForm.initState.ts","store/index.ts","components/TopNav/TopNav.reducer.ts","components/ProductsList/ProductsList.reducer.ts","components/Cart/Cart.reducer.ts","components/OrderForm/OrderForm.reducer.ts","serviceWorker.ts","index.tsx"],"names":["CategoriesListTemplate","props","categories","changeFilter","className","id","onClick","map","category","index","key","name","SingleProduct","product","addProduct","minusProduct","plusProduct","width","height","xmlns","preserveAspectRatio","focusable","role","aria-label","fill","x","y","dy","description","weight","weight_points","price","type","count","ProductListTemplate","loading","loaded","categoryFilter","products","MAIN_BACKEND","env","envPath","process","getProducts","a","axios","get","ProductListInitState","ProductListComponent","state","addProductToCart","bind","this","setInitState","then","response","tmpProducts","newProducts","newCategories","data","push","resetProduct","totalPrice","React","Component","connect","reducer","ProductListReducer","dispatch","payload","Constants","HomePage","CartTemplate","totalCount","removeProduct","CartComponent","CartReducer","OrderFormTemplate","user","deliveryData","paymentData","changeName","changeCell","changeAddress","changeRegion","changeComment","changePaymentMethod","createOrder","errors","onSubmit","htmlFor","placeholder","onChange","value","nameError","cell","cellError","style","region","address","addressError","rows","comment","checked","paymentType","OrderFormComponent","changeFormName","changeFormCell","changeFormAddress","changeFormRegion","changeFormComment","changeFormPaymentMethod","e","target","preventDefault","setError","resetErrors","isValid","length","compactProducts","postData","user_name","phone_number","compact_products","post","res","window","location","href","catch","err","error","sendOrderData","OrderFormReducer","resetForm","CartPage","SuccessPage","FailedPage","TopNavTemplate","cartCount","src","to","FooterTemplate","alt","App","path","exact","component","TopNavInitState","CartInitState","errorsInitState","OrderFormState","rootReducer","combineReducers","TopNavReducer","action","targetProduct","newCount","newProduct","newTotalCount","newTotalPrice","exist","result","onlyDigits","match","join","slice","newErrors","errorType","store","createStore","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.02d46bd2.chunk.js","sourcesContent":["import React from 'react'\nimport { ICategory, IProductListTemplate, IProduct } from './ProductsList.interface'\nimport './ProductsList.css'\n\n\ninterface ICategoryTemplate {\n    categories:ICategory[],\n    changeFilter:(payload:number) => void,\n}\n\ninterface ISingleProduct {\n    product: IProduct,\n    plusProduct:(payload:IProduct) => void,\n    minusProduct:(payload:IProduct) => void,\n    addProduct:(payload:IProduct) => void,\n\n}\n\nconst CategoriesListTemplate = (props:ICategoryTemplate) => {\n    const { categories, changeFilter } = props\n    return (\n        <ul className=\"list-group mb-5 categories-list\">\n        <li\n            id=\"category-all\"\n            className=\"list-group-item category\"\n            onClick={() => changeFilter(0)}\n        >Меню</li>\n        {categories.map( (category, index) => {\n            return (\n                <li\n                    key={`category-${index}`}\n                    className=\"list-group-item category\"\n                    onClick={() => changeFilter(category.id)}\n                >{category.name}</li>\n            )\n        } )}\n        </ul>\n    )\n}\n\nconst SingleProduct = (props:ISingleProduct) => {\n    const { product, addProduct, minusProduct, plusProduct } = props\n    return (\n        <div className=\"col-md-4 product-item\">\n            <div className=\"card mb-4 shadow-sm\">\n            <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#55595c\"></rect><text x=\"50%\" y=\"50%\" fill=\"#eceeef\" dy=\".3em\">Thumbnail</text></svg>\n            <div className=\"card-body\">\n                <h3 className=\"product-item-title\">{product.name}</h3>\n                <p className=\"card-text product-item-desc\">{product.description}</p>\n                <h5 className=\"product-item-props\">\n                    <small className=\"text-muted mr-2\">{product.weight} {product.weight_points}</small>\n                    <span className=\"product-item-price\">{product.price} грн</span>\n                </h5>\n                <hr/>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-outline-custom\"\n                        onClick={() => addProduct(product)}\n                    >Додати</button>\n                    <div className=\"product-item-counter\">\n                        <span className=\"with-border minus\" onClick={() => {minusProduct(product)}}>-</span>\n                        <span className=\"with-border counter\">{product.count}</span>\n                        <span className=\"with-border plus\" onClick={() => {plusProduct(product)}}>+</span>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport const ProductListTemplate = (props:IProductListTemplate) => {\n    const { categories, loading, loaded,\n        plusProduct, minusProduct, addProduct, changeFilter, categoryFilter } = props\n\n    if (!loading && loaded)\n        return (\n            <div className=\"ProductList\">\n\n                <CategoriesListTemplate categories={categories} changeFilter={changeFilter}/>\n\n                    {categories.map( (category) => {\n                        if (category.id === categoryFilter || !categoryFilter)\n                        return (\n                            <div key={`category-${category.id}`} className=\"mb-3\">\n                                <h1 className=\"category-name\">{category.name}</h1>\n                                <div className=\"row\">\n                                {category.products.map( product => {\n                                    return (\n                                        <SingleProduct\n                                            key={`product-${product.id}`}\n                                            product={product}\n                                            plusProduct={plusProduct}\n                                            minusProduct={minusProduct}\n                                            addProduct={addProduct}\n                                        />\n                                    )\n                                })}\n                                </div>\n                            </div>\n                        )\n                    })}                  \n\n                <CategoriesListTemplate categories={categories} changeFilter={changeFilter}/>\n\n            </div>\n        )\n    else if (loading && loaded)\n        return (\n            <h1>ERROR</h1>\n        )\n    else if (loading && !loaded)\n        return (\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n    else\n        return (\n            <h1></h1>\n        )\n}","const envPath = (env:string):string => {\n    switch (env) {\n        case \"development\":\n            return \"http://localhost:8000\"\n\n        case \"test\":\n            return \"\"\n\n        case \"production\":\n            return \"\"\n    \n        default:\n            return \"\"\n    }\n}\n\nexport const MAIN_BACKEND = envPath(process.env.NODE_ENV)\n","import axios from 'axios'\nimport { MAIN_BACKEND } from '../../constants'\n\n\nexport const getProducts = async () => {\n    return await axios.get(`${MAIN_BACKEND}/product/`)\n}\n\n\nexport const getAll = () => {\n    return [{\n        id: 1,\n        name: \"category1\",\n        products: [{\n            id: 1,\n            name: \"Product1\",\n            description: \"desc, longer, description, should, be here, some words, lalka, pipka\",\n            price: 10,\n            alailable: true,\n            weight: 200,\n            weight_points: \"г\",\n            category: 1,\n            image: '',\n        }]\n    },{\n        id: 2,\n        name: \"category2\",\n        products: [{\n            id: 2,\n            name: \"Product2\",\n            description: \"desc, longer, description, should\",\n            price: 32,\n            alailable: true,\n            weight_points: \"мл\",\n            weight: 300,\n            category: 2,\n            image: '',\n        }]\n    }]\n}","export default {\n    SET_INIT_STATE: \"SET_INIT_STATE_PRODUCCT_LIST\",\n    PLUS_PRODUCT: \"PLUS_PRODUCT_PRODUCCT_LIST\",\n    MINUS_PRODUCT: \"MINUS_PRODUCT_PRODUCCT_LIST\",\n    RESET_PRODUCT: \"RESET_PRODUCT_PRODUCCT_LIST\",\n    CHANGE_FILTER: \"CHANGE_FILTER_PRODUCCT_LIST\",\n}","import { IProductList } from \"./ProductsList.interface\"\n\n\nexport const ProductListInitState:IProductList = {\n    products: [],\n    categories: [],\n    loaded: false,\n    loading: false,\n    categoryFilter: 0,\n}","export default {\n    ADD_PRODUCT: \"ADD_PRODUCT_TO_CART\",\n    REMOVE_PRODUCT: \"REMOVE_PRODUCT_FROM_CART\",\n    PLUS_PRODUCT: \"PLUS_PRODUCT_TO_CART\",\n    MINUS_PRODUCT: \"MINUS_PRODUCT_TO_CART\",\n    CLEAN_CART: \"CLEAN_CART\",\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { ProductListTemplate } from './ProductsList.template'\nimport { IProductList, IProduct, IProductListExt, ICategory } from './ProductsList.interface'\nimport { getAll, getProducts } from './ProductsList.helpers'\nimport { setInitState } from './ProductsList.actions'\nimport { ProductListInitState } from \"./ProductsList.initState\"\nimport { plusProduct, minusProduct, resetProduct, changeFilter } from './ProductsList.actions'\nimport { addProduct } from '../Cart/Cart.actions'\nimport { ICartProduct } from '../Cart/Cart.interface'\n\n\nconst mapStateToProps = (reducer:any):IProductList => {\n    const { ProductListReducer } = reducer\n    return ProductListReducer\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setInitState:(payload:IProductList) => dispatch(setInitState(payload)),\n        plusProduct:(payload:IProduct) => dispatch(plusProduct(payload)),\n        minusProduct:(payload:IProduct) => dispatch(minusProduct(payload)),\n        resetProduct:(payload:IProduct) => dispatch(resetProduct(payload)),\n        addProduct:(payload:ICartProduct) => {dispatch(addProduct(payload))},\n        changeFilter:(payload:number) => {dispatch(changeFilter(payload))},\n    }\n}\n\n\nclass ProductListComponent extends React.Component<IProductListExt, IProductList> {\n\n    constructor(props: IProductListExt, state: IProductList) {\n        super(props, state)\n\n        this.addProductToCart = this.addProductToCart.bind(this)\n    }\n\n    componentDidMount() {\n        const { setInitState, categoryFilter } = this.props\n        setInitState({\n            ...ProductListInitState,\n            loading: true,\n        })\n\n        const response = getProducts()\n\n        response.then((response) => {\n            let newProducts: IProduct[] = []\n            let tmpProducts: IProduct[]\n            let newCategories: ICategory[] = []\n    \n            for (let category of response.data) {\n                tmpProducts = []\n                for (let product of category.products) {\n                    tmpProducts.push({\n                        ...product,\n                        count: 1\n                    })\n                }\n    \n                newCategories.push({\n                    id: category.id,\n                    name: category.name,\n                    products: tmpProducts,\n                })\n                newProducts = [...newProducts, ...tmpProducts]\n            }\n\n            setInitState({\n                categories: newCategories,\n                products: newProducts,\n                loading: false,\n                loaded: true,\n                categoryFilter,\n            })\n        })\n\n    }\n\n    addProductToCart(product:IProduct) {\n        const { addProduct, resetProduct } = this.props\n        addProduct({\n            id:product.id,\n            name:product.name,\n            price:product.price,\n            count:product.count,\n            totalPrice:product.price * product.count\n        })\n        resetProduct(product)\n    }\n\n    render() {\n        const { products, categories, loaded, loading, plusProduct,\n            minusProduct, categoryFilter, changeFilter } = this.props\n        return (\n            <ProductListTemplate\n                products={products}\n                categories={categories}\n                loaded={loaded}\n                loading={loading}\n                plusProduct={plusProduct}\n                minusProduct={minusProduct}\n                categoryFilter={categoryFilter}\n                addProduct={product => this.addProductToCart(product)}\n                changeFilter={changeFilter}\n            />\n        )\n    }\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListComponent)","import ProductsListComponent from \"./ProductsList.component\"\n\n\nexport default {\n    Component: ProductsListComponent,\n}","import Constants from './ProductsList.constants'\nimport { IProductList, IProduct } from './ProductsList.interface'\n\n\nexport const setInitState = (payload:IProductList) => {\n    return {type: Constants.SET_INIT_STATE, payload}\n}\n\nexport const plusProduct = (product:IProduct) => {\n    return {type: Constants.PLUS_PRODUCT, payload:product}\n}\n\nexport const minusProduct = (product:IProduct) => {\n    return {type: Constants.MINUS_PRODUCT, payload:product}\n}\n\nexport const resetProduct = (product:IProduct) => {\n    return {type: Constants.RESET_PRODUCT, payload:product}\n}\n\nexport const changeFilter = (categoryId:number) => {\n    return {type: Constants.CHANGE_FILTER, payload:categoryId}\n}","import Constants from './Cart.constants'\nimport { ICartProduct } from './Cart.interface'\n\n\nexport const addProduct = (product:ICartProduct) => {\n    return {type:Constants.ADD_PRODUCT, payload:product}\n}\n\nexport const removeProduct = (product:ICartProduct) => {\n    return {type:Constants.REMOVE_PRODUCT, payload:product}\n}\n\nexport const plusProduct = (product:ICartProduct) => {\n    return {type:Constants.PLUS_PRODUCT, payload:product}\n}\n\nexport const minusProduct = (product:ICartProduct) => {\n    return {type:Constants.MINUS_PRODUCT, payload:product}\n}\n\nexport const cleanCart = () => {\n    return {type:Constants.CLEAN_CART, payload:{}}\n}","import React from 'react'\nimport ProductList from '../components/ProductsList'\n\nconst HomePage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"jumbotron p-4 p-md-5 text-white rounded bg-dark\">\n                <div className=\"col-md-12 px-0\">\n                <h3 className=\"display-6 font-italic text-left\">Відтепер щодня з 12:00 до 20:00 ви можете замовити свої улюблені страви з доставкою від Maestro!</h3>\n                <p className=\"lead my-3 text-left\">Залишаючись вдома ви рятуєте життя , а ми хочемо зробити ваш карантин смачним і корисним!</p>\n                <p className=\"lead my-3 text-left\">Умови доставки:<br/>\n                    ➖Самовивіз -10%<br/>\n                    ➖Доставка 50гр (в межах Львова)<br/>\n                    ➖За межі Львова - вартість за тарифом таксі<br/>\n                    ➖При замовленні від 500 грн - доставка БЕЗКОШТОВНА </p>\n                </div>\n            </div>\n\n            <ProductList.Component />\n\n        </div>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { ICartStateExt } from './Cart.interface'\nimport './Cart.css'\n\n\nexport const CartTemplate = (props:ICartStateExt) => {\n    const { products, totalCount, totalPrice, plusProduct, minusProduct, removeProduct } = props\n    return (\n        <div className=\"CartTemplate\">\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n              <span>Ваше замовлення</span>\n              <span className=\"badge badge-custom badge-pill\">{totalCount}</span>\n            </h4>\n            <ul className=\"list-group mb-3\">\n              {products.map( (product, index ) => {\n                return (\n                  <li key={`cart-item-${index}`} className=\"list-group-item cart-item\">\n                    <div className=\"d-flex justify-content-between lh-condensed mb-2\">\n                      <h6 className=\"my-0\">{product.name}</h6>\n                      <span>{product.price}грн X {product.count} = {product.totalPrice}грн</span>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                      <div className=\"cart-item-counter\">\n                          <span className=\"with-border minus\" onClick={() => {minusProduct(product)}}>-</span>\n                          <span className=\"with-border counter\">{product.count}</span>\n                          <span className=\"with-border plus\" onClick={() => {plusProduct(product)}}>+</span>\n                      </div>\n                      <div>\n                        <span className=\"with-border remove\" onClick={() => removeProduct(product)}>X</span>\n                      </div>\n                    </div>\n                  </li>  \n                )\n              })}\n              <li className=\"list-group-item d-flex justify-content-between\">\n                <span>Всього</span>\n                <strong>{totalPrice}грн</strong>\n              </li>\n            </ul>\n        </div>\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { ICartState, ICartStateExt, ICartProduct } from './Cart.interface'\nimport { CartTemplate } from './Cart.template'\nimport { plusProduct, minusProduct, removeProduct } from '../Cart/Cart.actions'\n\n\nconst mapStateToProps = (reducer:any):ICartState => {\n    const { CartReducer } = reducer\n    return CartReducer\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        plusProduct:(product:ICartProduct) => dispatch(plusProduct(product)),\n        minusProduct:(product:ICartProduct) => dispatch(minusProduct(product)),\n        removeProduct:(product:ICartProduct) => dispatch(removeProduct(product)),\n    }\n}\n\nclass CartComponent extends React.Component<ICartStateExt, ICartState> {\n    render() {\n        return (\n            <CartTemplate {...this.props}/>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartComponent)","import CartComponent from './Cart.component'\n\n\nexport default {\n    Component: CartComponent,\n}","import React from 'react'\nimport { IOrderFormTemplate } from './OrderForm.interface'\nimport './OrderForm.css'\n\n\nexport const OrderFormTemplate = (props:IOrderFormTemplate) => {\n    const {\n        user,\n        deliveryData,\n        paymentData,\n        changeName,\n        changeCell,\n        changeAddress,\n        changeRegion,\n        changeComment,\n        changePaymentMethod,\n        createOrder,\n        errors,\n    } = props\n    return (\n        <form className=\"needs-validation OrderFormTemplate\" onSubmit={createOrder}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"address\">Ім'я</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"\"\n                    onChange={changeName}\n                    value={user.name}\n                />\n                <div className={`invalid-feedback ${errors.nameError ? \"d-block\" : \"\"}`}>\n                Вкажіть ваше ім'я.\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"cell\">Номер телефону</label>\n                <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">+380</span>\n                </div>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"cell\"\n                    placeholder=\"XXXXXXXXX\"\n                    onChange={changeCell}\n                    value={user.cell}\n                    />\n                <div className={`invalid-feedback ${errors.cellError ? \"d-block\" : \"\"}`} style={{width: \"100%\"}}>\n                    Номер телефону є обов'язковим.\n                </div>\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"city\">Регіон</label>\n                <select\n                    onChange={changeRegion}\n                    value={deliveryData.region}\n                    className=\"custom-select d-block w-100\"\n                    id=\"city\"\n                >\n                    <option value=\"lviv\">Львів</option>\n                    <option value=\"lviv region\">Околиці Львова</option>\n                    <option value=\"by-client\">Самовивіз (знижка 10%)</option>\n                </select>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"address\">Адреса</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"address\"\n                    placeholder=\"вул. Шевченка 1, кв 1\"\n                    onChange={changeAddress}\n                    value={deliveryData.address}\n                />\n                <div className={`invalid-feedback ${errors.addressError ? \"d-block\" : \"\"}`}>\n                Введіть адресу доставки.\n                </div>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"comment\">Коментарій</label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"comment\"\n                    rows={5}\n                    placeholder=\"додаткові пропозиції...\"\n                    onChange={changeComment}\n                    value={deliveryData.comment}\n                ></textarea>\n            </div>\n\n            <hr className=\"mb-4\" />\n\n            <h4 className=\"mb-3\">Тип оплати</h4>\n            <div className=\"d-block my-3\">\n                <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"cash\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        checked={paymentData.paymentType == '1'}\n                        value={'1'}\n                        onChange={changePaymentMethod}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"cash\">Готівка</label>\n                </div>\n                <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"debit\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        checked={paymentData.paymentType == '2'}\n                        value={'2'}\n                        onChange={changePaymentMethod}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debit\">Карткою при отриманні</label>\n                </div>\n                {/* <div className=\"custom-control custom-radio\">\n                    <input\n                        id=\"debit\"\n                        name=\"paymentMethod\"\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        disabled\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debit\">Карткою онлайн (не досту)</label>\n                </div> */}\n            </div>\n\n            <hr className=\"mb-4\" />\n            <button className=\"btn btn-custom btn-lg btn-block\" type=\"submit\">Створити замовлення</button>\n        </form>\n    )\n}","export default {\n    CHANGE_NAME: \"CHANGE_NAME\",\n    CHANGE_CELL: \"CHANGE_CELL\",\n    CHANGE_ADDRESS: \"CHANGE_ADDRESS\",\n    CHANGE_REGION: \"CHANGE_REGION\",\n    CHANGE_COMMENT: \"CHANGE_COMMENT\",\n    CHANGE_PAYMENT_METHOD: \"CHANGE_PAYMENT_METHOD\",\n    RESET_FORM: \"RESET_FORM\",\n    RESET_ERRORS: \"RESET_ERRORS\",\n    SET_ERROR: \"SET_ERROR\",\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IOrderForm, IOrderFormExt } from './OrderForm.interface'\nimport { OrderFormTemplate } from './OrderForm.template'\nimport {\n    changeName,\n    changeCell,\n    changeAddress,\n    changeRegion,\n    changeComment,\n    changePaymentMethod,\n    resetForm,\n    resetErrors,\n    setError,\n} from './OrderForm.actions'\nimport { sendOrderData } from './OrderForm.helpers'\n\n\nconst mapStateToProps = (reducer:any):IOrderForm => {\n    const { OrderFormReducer, CartReducer } = reducer\n    return {\n        ...OrderFormReducer,\n        products:CartReducer.products,\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeName:(payload:string) => dispatch(changeName(payload)),\n        changeCell:(payload:string) => dispatch(changeCell(payload)),\n        changeAddress:(payload:string) => dispatch(changeAddress(payload)),\n        changeRegion:(payload:string) => dispatch(changeRegion(payload)),\n        changeComment:(payload:string) => dispatch(changeComment(payload)),\n        changePaymentMethod:(payload:string) => dispatch(changePaymentMethod(payload)),\n        resetForm:() => dispatch(resetForm()),\n        resetErrors:() => dispatch(resetErrors()),\n        setError:(name:string) => dispatch(setError(name)),\n    }\n}\n\n\nclass OrderFormComponent extends React.Component<IOrderFormExt, IOrderForm> {\n\n    constructor(props:IOrderFormExt, state:IOrderForm) {\n        super(props, state)\n\n        this.changeFormName = this.changeFormName.bind(this)\n        this.changeFormCell = this.changeFormCell.bind(this)\n        this.changeFormAddress = this.changeFormAddress.bind(this)\n        this.changeFormRegion = this.changeFormRegion.bind(this)\n        this.changeFormComment = this.changeFormComment.bind(this)\n        this.changeFormPaymentMethod = this.changeFormPaymentMethod.bind(this)\n        this.createOrder = this.createOrder.bind(this)\n    }\n\n    changeFormName(e:any) {\n        const { changeName } = this.props\n        changeName(e.target.value)\n    }\n\n    changeFormCell(e:any) {\n        const { changeCell } = this.props\n        changeCell(e.target.value)\n    }\n\n    changeFormAddress(e:any) {\n        const { changeAddress } = this.props\n        changeAddress(e.target.value)\n    }\n\n    changeFormRegion(e:any) {\n        const { changeRegion } = this.props\n        changeRegion(e.target.value)\n    }\n\n    changeFormComment(e:any) {\n        const { changeComment } = this.props\n        changeComment(e.target.value)\n    }\n\n    changeFormPaymentMethod(e:any) {\n        const { changePaymentMethod } = this.props\n        changePaymentMethod(e.target.value)\n    }\n\n    createOrder(e:any) {\n        e.preventDefault()\n        const { setError, resetErrors } = this.props\n        const { user, deliveryData, paymentData, products } = this.props\n        resetErrors()\n        let isValid = true\n\n        if (user.name.length === 0){\n            setError(\"name\")\n            isValid = false\n        }\n        if (user.cell.length < 9){\n            setError(\"cell\")\n            isValid = false\n        }\n        if (deliveryData.address.length < 5){\n            setError(\"address\")\n            isValid = false\n        }\n        if (isValid) {\n            sendOrderData({user, deliveryData, paymentData, products})\n        }\n    }\n\n    render() {\n        const {\n            user,\n            deliveryData,\n            paymentData,\n            errors,\n        } = this.props\n        return (\n            <OrderFormTemplate\n                user={user}\n                deliveryData={deliveryData}\n                paymentData={paymentData}\n                changeName={this.changeFormName}\n                changeCell={this.changeFormCell}\n                changeAddress={this.changeFormAddress}\n                changeRegion={this.changeFormRegion}\n                changeComment={this.changeFormComment}\n                changePaymentMethod={this.changeFormPaymentMethod}\n                createOrder={this.createOrder}\n                errors={errors}\n            />\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderFormComponent)","import axios from 'axios'\nimport { MAIN_BACKEND } from '../../constants'\n\n\ninterface CompactProduct {\n    id:number,\n    count:number,\n}\n\nexport const sendOrderData = (data:any) => {\n    try {\n        const { user, deliveryData, paymentData, products } = data\n        let compactProducts:CompactProduct[] = []\n\n        if (products.length === 0)\n            return false\n\n        for (let product of products) {\n            compactProducts.push({\n                id:product.id,\n                count:product.count,\n            })\n        }\n        const postData = {\n            user_name: user.name,\n            phone_number: user.cell,\n            address: deliveryData.address,\n            region: deliveryData.region,\n            comment: deliveryData.comment,\n            compact_products: compactProducts\n        }\n\n        axios.post(`${MAIN_BACKEND}/order/`, postData).then((res) => {\n            window.location.href = \"/success\"\n        }).catch((err) => {\n            window.location.href = \"/failed\"\n        })\n\n        return true\n    } catch (error) {\n        return false\n    }\n} ","import OrderFormComponent from \"./OrderForm.component\"\n\n\nexport default {\n    Component:OrderFormComponent\n}","import Constants from './OrderForm.constants'\n\n\nexport const changeName = (payload:string) => {\n    return {type:Constants.CHANGE_NAME, payload}\n}\n\nexport const changeCell = (payload:string) => {\n    return {type:Constants.CHANGE_CELL, payload}\n}\n\nexport const changeAddress = (payload:string) => {\n    return {type:Constants.CHANGE_ADDRESS, payload}\n}\n\nexport const changeRegion = (payload:string) => {\n    return {type:Constants.CHANGE_REGION, payload}\n}\n\nexport const changeComment = (payload:string) => {\n    return {type:Constants.CHANGE_COMMENT, payload}\n}\n\nexport const changePaymentMethod = (payload:string) => {\n    return {type:Constants.CHANGE_PAYMENT_METHOD, payload}\n}\n\nexport const resetForm = () => {\n    return {type:Constants.RESET_FORM, payload:{}}\n}\n\nexport const resetErrors = () => {\n    return {type:Constants.RESET_ERRORS, payload:{}}\n}\n\nexport const setError = (name:string) => {\n    return {type:Constants.SET_ERROR, payload:name}\n}","import React from 'react'\nimport Cart from '../components/Cart'\nimport OrderForm from '../components/OrderForm'\n\n\nconst CartPage = () => {\n    return (\n        <div className=\"container cart-container\">\n            <div className=\"row\">\n                <div className=\"col-md-4 order-md-2 mb-4\">\n                    <Cart.Component />\n                </div>\n\n                <div className=\"col-md-8 order-md-1\">\n                    <h4 className=\"mb-3\">Деталі замовлення</h4>\n                    <OrderForm.Component />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CartPage","import React from 'react'\n\n\nconst SuccessPage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n            <div className=\"col-md-5 p-lg-5 mx-auto my-5\">\n                <h1 className=\"display-4 font-weight-normal\">Ваше замовлення прийняте</h1>\n                <p className=\"lead font-weight-normal\">And an even wittier subheading to boot. Jumpstart your marketing efforts with this example based on Apple’s marketing pages.</p>\n                <a className=\"btn btn-outline-secondary\" href=\"/\">Go back</a>\n            </div>\n            <div className=\"product-device shadow-sm d-none d-md-block\"></div>\n            <div className=\"product-device product-device-2 shadow-sm d-none d-md-block\"></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SuccessPage","import React from 'react'\n\n\nconst FailedPage = () => {\n    return (\n        <div className=\"container main-container\">\n\n            <h1>Failed</h1>\n\n        </div>\n    )\n}\n\nexport default FailedPage","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ITopNavInterface } from './TopNav.interface'\nimport './TopNav.css'\n\n\nconst TopNavTemplate = (props:ITopNavInterface) => {\n    const { cartCount } = props\n    return (\n        <div className=\"d-flex flex-column flex-md-row align-items-center fixed-top p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\">\n                <img className=\"topnav-logo\" src=\"/static/images/logo.jpg\"/>\n                <span className=\"d-none d-md-block\">+38 098 982 35 82</span>\n            </h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n            <Link className=\"p-2 text-dark\" to=\"/\">Головна</Link>\n            </nav>\n            <Link className=\"btn btn-outline-custom\" to=\"/cart\">\n                <span className=\"mr-1\">Замовлення</span>\n                <span className=\"badge badge-light\">{cartCount}</span>\n            </Link>\n        </div>\n    )\n}\n\nexport default TopNavTemplate","import TopNavComponent from './TopNav.component'\n\nexport default {\n    Component: TopNavComponent\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport TopNavTemplate from './TopNav.template'\nimport { ITopNavInterface } from './TopNav.interface'\n\n\nconst mapStateToProps = (reducer:any):ITopNavInterface => {\n    const { CartReducer } = reducer\n    return {\n        cartCount:CartReducer.totalCount,\n    }\n}\n\nconst TopNavComponent = (props:ITopNavInterface) => {\n    return (<TopNavTemplate {...props}/>)\n}\n\nexport default connect(mapStateToProps)(TopNavComponent)","import React from 'react'\nimport './Footer.css'\n\n\nexport const FooterTemplate = () => {\n    return (\n        <footer className=\"container pt-4 my-md-5 pt-md-5 border-top Footer\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md\">\n                    <img className=\"mb-2\" src=\"/docs/4.4/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"24\" height=\"24\" />\n                    <small className=\"d-block mb-3 text-muted\">© 2015-2020</small>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Умови доставки:</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>Самовивіз -10%</li>\n                    <li>Доставка 50гр (в межах Львова)</li>\n                    <li>За межі Львова - вартість за тарифом таксі</li>\n                    <li>При замовленні від 500 грн - доставка БЕЗКОШТОВНА</li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Час доставки</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>59 хв - 2 год ( залежно яке замовлення і куди везти)</li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-md\">\n                    <h5>Як оплатити?</h5>\n                    <ul className=\"list-unstyled text-small\">\n                    <li>Готівкою кур’єру</li>\n                    <li>Карткою через термінал у кур’єра</li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    )\n}","import { FooterComponent } from './Footer.component'\n\n\nexport default {\n    Compenent: FooterComponent\n}","import React from 'react'\nimport { FooterTemplate } from './Footer.template'\n\n\nexport const FooterComponent = () => {\n    return (<FooterTemplate />)\n}","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\nimport HomePage from './pages/Home'\nimport CartPage from './pages/Cart'\nimport SuccessPage from './pages/Success'\nimport FailedPage from './pages/Failed'\nimport TopNav from './components/TopNav'\nimport Footer from './components/Footer'\nimport logo from './logo.svg'\nimport './App.css'\n\nconst App =() => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <TopNav.Component />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/success\" component={SuccessPage} />\n          <Route path=\"/failed\" component={FailedPage} />\n        </Switch>\n        <Footer.Compenent />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ITopNavInterface } from \"./TopNav.interface\"\n\n\nexport const TopNavInitState:ITopNavInterface = {\n    cartCount: 0,\n}","import { ICartState } from \"./Cart.interface\"\n\nexport const CartInitState:ICartState = {\n    products: [],\n    totalPrice:0,\n    totalCount:0,\n}","import { IUser, IDeliveryData, IPaymentData, IOrderForm, IErrors } from \"./OrderForm.interface\"\nimport { ICartProduct } from \"../Cart/Cart.interface\"\n\n\nexport const userInitState:IUser = {\n    name: \"\",\n    cell: \"\",\n}\n\nexport const deliveryDataInitState:IDeliveryData = {\n    region: \"lviv\",\n    address: \"\",\n    comment: \"\",\n}\n\nexport const productsInitState:ICartProduct[] = []\n\nexport const paymentDataInitState:IPaymentData = {\n    paymentType: '1',\n}\n\nexport const errorsInitState:IErrors = {\n    nameError: false,\n    cellError: false,\n    addressError: false,\n}\n\nexport const OrderFormState:IOrderForm = {\n    user:userInitState,\n    deliveryData:deliveryDataInitState,\n    products:productsInitState,\n    paymentData:paymentDataInitState,\n    errors:errorsInitState,\n}","import { createStore, combineReducers } from \"redux\"\nimport { TopNavReducer } from '../components/TopNav/TopNav.reducer'\nimport { ProductListReducer } from '../components/ProductsList/ProductsList.reducer'\nimport { CartReducer } from \"../components/Cart/Cart.reducer\"\nimport { OrderFormReducer } from \"../components/OrderForm/OrderForm.reducer\"\n\n\nconst rootReducer = combineReducers({\n    TopNavReducer,\n    ProductListReducer,\n    CartReducer,\n    OrderFormReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react'\nimport { TopNavInitState } from './TopNav.initState'\n\n\nexport const TopNavReducer = (state = TopNavInitState, action:any) => {\n    return state\n}","import { IProductList, IProduct, ICategory } from \"./ProductsList.interface\"\nimport { ProductListInitState } from \"./ProductsList.initState\"\nimport Constants from './ProductsList.constants'\n\n\nexport const ProductListReducer = (state:IProductList = ProductListInitState, action:any) => {\n\n    if (action.type === Constants.SET_INIT_STATE) {\n        return action.payload\n    }\n\n    if (action.type === Constants.PLUS_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        newProducts.push({\n                            ...product,\n                            count: product.count + 1\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.MINUS_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        const newCount = product.count > 1 ? product.count - 1 : 1\n                        newProducts.push({\n                            ...product,\n                            count: newCount\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.RESET_PRODUCT) {\n        const targetProduct = action.payload\n        let newProducts: IProduct[]\n        let newCategories: ICategory[] = []\n        for (let category of state.categories) {\n\n            if (category.id === targetProduct.category) {\n                newProducts = []\n                for (let product of category.products) {\n                    if (product.id === targetProduct.id) {\n                        newProducts.push({\n                            ...product,\n                            count: 1\n                        })\n                    } else {\n                        newProducts.push(product)\n                    }\n                }\n                newCategories.push({\n                    ...category,\n                    products:newProducts\n                })\n            } else {\n                newCategories.push(category)\n            }  \n        }\n        \n        return {\n            ...state,\n            categories:newCategories,\n        }\n    }\n\n    if (action.type === Constants.CHANGE_FILTER) {\n        return {\n            ...state,\n            categoryFilter:action.payload,\n        }\n    }\n\n    return state\n}","import { ICartState, ICartProduct } from \"./Cart.interface\"\nimport { CartInitState } from \"./Cart.initState\"\nimport Constants from './Cart.constants'\n\n\nexport const CartReducer = (state:ICartState = CartInitState, action:any):ICartState => {\n\n    if (action.type === Constants.ADD_PRODUCT) {\n        const newProduct:ICartProduct = action.payload\n        let newProducts:ICartProduct[] = []\n        let newTotalCount = 0\n        let newTotalPrice = 0\n        let exist = false\n        for (let product of state.products) {\n            if (product.id === newProduct.id) {\n                newProducts.push(newProduct)\n                newTotalCount += newProduct.count\n                newTotalPrice += newProduct.totalPrice\n                exist = true\n            } else {\n                newProducts.push(product)\n                newTotalCount += product.count\n                newTotalPrice += product.totalPrice\n            }\n        }\n        if (!exist) {\n            newProducts.push(newProduct)\n            newTotalCount += newProduct.count\n            newTotalPrice += newProduct.totalPrice\n        }\n        const result = {\n            products: newProducts,\n            totalCount: newTotalCount,\n            totalPrice: newTotalPrice,\n        }\n        return result\n    }\n\n    if (action.type === Constants.REMOVE_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        for (let product of state.products) {\n            if (product.id !== targetProduct.id) {\n                newProducts.push(product)\n            }\n        }\n        return {\n            products:newProducts,\n            totalCount: state.totalCount - targetProduct.count,\n            totalPrice: state.totalPrice - targetProduct.totalPrice,\n        }\n    }\n\n    if (action.type === Constants.PLUS_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        for (let product of state.products) {\n            if (product.id === targetProduct.id) {\n                newProducts.push({\n                    ...product,\n                    count: product.count + 1,\n                    totalPrice: product.totalPrice + product.price,\n                })\n            } else {\n                newProducts.push(product)\n            }\n        }\n        return {\n            products: newProducts,\n            totalCount: state.totalCount + 1,\n            totalPrice: state.totalPrice + targetProduct.price\n        }\n    }\n\n    if (action.type === Constants.MINUS_PRODUCT) {\n        let newProducts:ICartProduct[] = []\n        const targetProduct:ICartProduct = action.payload\n        let newTotalCount = 0\n        let newTotalPrice = 0\n        for (let product of state.products) {\n            if (product.id === targetProduct.id) {\n                const newCount = product.count - 1\n                if (newCount >= 1) {\n                    newProducts.push({\n                        ...product,\n                        count: newCount,\n                        totalPrice: product.price * newCount\n                    })    \n                    newTotalCount += newCount\n                    newTotalPrice += product.price * newCount\n                }\n                    \n            } else {\n                newProducts.push(product)\n                newTotalCount += product.count\n                newTotalPrice += product.totalPrice\n            }\n        }\n        return {\n            products: newProducts,\n            totalCount: newTotalCount,\n            totalPrice: newTotalPrice,\n        }\n    }\n\n    if (action.type === Constants.CLEAN_CART) {\n        return {\n            products:[],\n            totalCount: 0,\n            totalPrice: 0,\n        }\n    }\n\n    return state\n}","import { IOrderForm } from \"./OrderForm.interface\"\nimport { OrderFormState, errorsInitState } from \"./OrderForm.initState\"\nimport Constants from './OrderForm.constants'\n\n\nexport const OrderFormReducer = (state:IOrderForm = OrderFormState, action:any) => {\n\n    if (action.type === Constants.CHANGE_NAME) {\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                name: action.payload,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_CELL) {\n        let onlyDigits = action.payload.match(/\\d/g)\n        let cell:string = onlyDigits ? onlyDigits.join(\"\") : \"\"\n        if (cell.length > 9)\n            cell = cell.slice(0, 9)\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                cell,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_REGION) {\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                region: action.payload,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_ADDRESS) {\n        let address = action.payload\n        if (address.length > 32)\n            address = address.slice(0, 32)\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                address,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_COMMENT) {\n        let comment = action.payload\n        if (comment.length > 256)\n            comment = comment.slice(0, 256)\n        return {\n            ...state,\n            deliveryData: {\n                ...state.deliveryData,\n                comment,\n            }\n        }\n    }\n\n    if (action.type === Constants.CHANGE_PAYMENT_METHOD) {\n        let paymentType = action.payload\n        return {\n            ...state,\n            paymentData: {\n                ...state.paymentData,\n                paymentType,\n            }\n        }\n    }\n\n    if (action.type === Constants.RESET_FORM) {\n        return {\n            ...OrderFormState\n        }\n    }\n\n    if (action.type === Constants.RESET_ERRORS) {\n        return {\n            ...state,\n            errors: {\n                ...errorsInitState\n            }\n        }\n    }\n\n    if (action.type === Constants.SET_ERROR) {\n        let newErrors = {...state.errors}\n        const errorType = action.payload\n\n        if (errorType === \"name\")\n            newErrors.nameError = true\n        if (errorType === \"cell\")\n            newErrors.cellError = true\n        if (errorType === \"address\")\n            newErrors.addressError = true\n\n        return {\n            ...state,\n            errors: {\n                ...newErrors\n            }\n        }\n    }\n\n    return state\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store'\nimport { Provider } from \"react-redux\"\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}